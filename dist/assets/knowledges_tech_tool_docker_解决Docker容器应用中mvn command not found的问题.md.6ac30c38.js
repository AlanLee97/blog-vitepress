import{_ as s,o as a,c as n,b as l}from"./app.d2d47940.js";const D=JSON.parse('{"title":"解决Docker容器应用中mvn: command not found的问题","description":"","frontmatter":{"date":"2020-02-20T00:00:00.000Z","categories":["运维"],"tags":["docker"]},"headers":[{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"原因","slug":"原因","link":"#原因","children":[]},{"level":2,"title":"解决","slug":"解决","link":"#解决","children":[]}],"relativePath":"knowledges/tech/tool/docker/解决Docker容器应用中mvn command not found的问题.md","lastUpdated":1678618356000}'),e={name:"knowledges/tech/tool/docker/解决Docker容器应用中mvn command not found的问题.md"},o=l(`<h1 id="解决docker容器应用中mvn-command-not-found的问题" tabindex="-1">解决Docker容器应用中mvn: command not found的问题 <a class="header-anchor" href="#解决docker容器应用中mvn-command-not-found的问题" aria-hidden="true">#</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-hidden="true">#</a></h2><p>我在搞jenkins时使用shell脚本执行mvn命令，提示mvn: command not found。因为我的jenkins是在docker中安装的，所以没有mvn环境</p><h2 id="原因" tabindex="-1">原因 <a class="header-anchor" href="#原因" aria-hidden="true">#</a></h2><p>在docker中安装的jenkins，没有maven，虽然可以通过挂载宿主机目录来提供maven，但是容器内的环境变量却不会知道设置，因此需要我们手动设置环境变量。</p><h2 id="解决" tabindex="-1">解决 <a class="header-anchor" href="#解决" aria-hidden="true">#</a></h2><ol><li>运行容器的时候将宿主机的java和maven目录挂载进去</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v </span><span style="color:#C3E88D;">/usr/lib/jvm/java-</span><span style="color:#F78C6C;">1.8</span><span style="color:#C3E88D;">-openjdk:/usr/lib/jvm/java-</span><span style="color:#F78C6C;">1.8</span><span style="color:#C3E88D;">-openjdk</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v </span><span style="color:#C3E88D;">/usr/local/maven/maven3:/usr/local/maven/maven3</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">容器id</span></span>
<span class="line"></span></code></pre></div><p><code>-v</code> 是将宿主机的目录挂载到容器内</p><p><code>:</code>冒号前面的是宿主机目录，冒号后面的是容器应用的目录</p><ol start="2"><li>运行容器成功后，进入容器</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>设置容器应用的环境变量</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">vi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/profile</span></span>
<span class="line"></span></code></pre></div><p>在文件最后面添加如下内容</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># java环境变量</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> JAVA_HOME</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/usr/lib/jvm/java-</span><span style="color:#F78C6C;">1.8</span><span style="color:#C3E88D;">-openjdk</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> JRE_HOME</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">$JAVA_HOME</span><span style="color:#C3E88D;">/jre</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">$JAVA_HOME</span><span style="color:#C3E88D;">/bin:</span><span style="color:#A6ACCD;">$PATH</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> CLASSPATH</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">./:JAVA_HOME/lib:</span><span style="color:#A6ACCD;">$JRE_HOME</span><span style="color:#C3E88D;">/lib</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># maven环境变量</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> M2_HOME</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/usr/local/maven/maven3</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">$PATH</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;">$JAVA_HOME</span><span style="color:#C3E88D;">/bin:</span><span style="color:#A6ACCD;">$M2_HOME</span><span style="color:#C3E88D;">/bin</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li>更新profile</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">source</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/profile</span></span>
<span class="line"></span></code></pre></div><ol start="5"><li>验证是否设置成功</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">mvn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"></span></code></pre></div><p>出现上面的内容则表明成功</p>`,21),p=[o];function t(c,r,i,C,d,y){return a(),n("div",null,p)}const h=s(e,[["render",t]]);export{D as __pageData,h as default};
