import{_ as e,o as a,c as s,b as t}from"./app.d2d47940.js";const g=JSON.parse('{"title":"JSON序列化","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装插件","slug":"安装插件","link":"#安装插件","children":[]},{"level":2,"title":"创建目录","slug":"创建目录","link":"#创建目录","children":[]},{"level":2,"title":"使用插件生成model","slug":"使用插件生成model","link":"#使用插件生成model","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]}],"relativePath":"knowledges/tech/mobile-end/flutter/Flutter04 - JSON序列化.md","lastUpdated":1678618356000}'),n={name:"knowledges/tech/mobile-end/flutter/Flutter04 - JSON序列化.md"},l=t(`<h1 id="json序列化" tabindex="-1">JSON序列化 <a class="header-anchor" href="#json序列化" aria-hidden="true">#</a></h1><h2 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-hidden="true">#</a></h2><p>安装插件JsonToDartAction</p><h2 id="创建目录" tabindex="-1">创建目录 <a class="header-anchor" href="#创建目录" aria-hidden="true">#</a></h2><p>创建models目录，用来存放model类</p><h2 id="使用插件生成model" tabindex="-1">使用插件生成model <a class="header-anchor" href="#使用插件生成model" aria-hidden="true">#</a></h2><p>在models目录下右键 选择 New -&gt; JsonToDartAction</p><p><img src="https://gitee.com/AlanLee97/public-asset/raw/master/note_images/image-20200422204129695.png#alt=image-20200422204129695" alt=""></p><p>填写相应的数据</p><p><img src="https://gitee.com/AlanLee97/public-asset/raw/master/note_images/image-20200422204500032.png#alt=image-20200422204500032" alt=""></p><p>点击make之后会生成对应的model类和一个generated文件夹</p><p><img src="https://gitee.com/AlanLee97/public-asset/raw/master/note_images/image-20200422204849666.png#alt=image-20200422204849666" alt=""></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-hidden="true">#</a></h2><p>在xxx_entity_helper.dart文件中有一个xxxEntityFromJson()方法，调用该方法，返回数据</p><p>以用户model为例</p><div class="language-dart"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> userEntity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">userEntityFromJson</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">UserEntity</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> res[</span><span style="color:#C3E88D;">&quot;data&quot;</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(userEntity</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">username)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,16),o=[l];function r(p,i,c,d,h,m){return a(),s("div",null,o)}const u=e(n,[["render",r]]);export{g as __pageData,u as default};
