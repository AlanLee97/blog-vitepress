import{_ as a,o as e,c as i,b as n}from"./app.d2d47940.js";const u=JSON.parse('{"title":"Android知识总结","description":"","frontmatter":{},"headers":[{"level":2,"title":"Android系统架构","slug":"android系统架构","link":"#android系统架构","children":[]},{"level":2,"title":"Android四大组件（一） - 活动","slug":"android四大组件-一-活动","link":"#android四大组件-一-活动","children":[{"level":3,"title":"Activity（活动）","slug":"activity-活动","link":"#activity-活动","children":[]}]},{"level":2,"title":"常用控件","slug":"常用控件","link":"#常用控件","children":[]},{"level":2,"title":"常用布局","slug":"常用布局","link":"#常用布局","children":[]},{"level":2,"title":"Fragment（碎片）","slug":"fragment-碎片","link":"#fragment-碎片","children":[]},{"level":2,"title":"Android四大组件（二） - 广播接收器","slug":"android四大组件-二-广播接收器","link":"#android四大组件-二-广播接收器","children":[{"level":3,"title":"动态注册广播","slug":"动态注册广播","link":"#动态注册广播","children":[]},{"level":3,"title":"静态注册广播","slug":"静态注册广播","link":"#静态注册广播","children":[]}]}],"relativePath":"knowledges/tech/mobile-end/android/Android知识总结.md","lastUpdated":1678618356000}'),t={name:"knowledges/tech/mobile-end/android/Android知识总结.md"},l=n(`<h1 id="android知识总结" tabindex="-1">Android知识总结 <a class="header-anchor" href="#android知识总结" aria-hidden="true">#</a></h1><h2 id="android系统架构" tabindex="-1">Android系统架构 <a class="header-anchor" href="#android系统架构" aria-hidden="true">#</a></h2><p>Android系统架构分为4层</p><ol><li>Linux内核层</li><li>系统运行库层</li><li>应用框架层</li><li>应用层</li></ol><p><img src="https://bkimg.cdn.bcebos.com/pic/2fdda3cc7cd98d10ac7dfab52b3fb80e7aec908d?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2U4MA==,xp_5,yp_5#alt=img" alt=""></p><h2 id="android四大组件-一-活动" tabindex="-1">Android四大组件（一） - 活动 <a class="header-anchor" href="#android四大组件-一-活动" aria-hidden="true">#</a></h2><ol><li>Activity（活动）</li><li>Service（服务）</li><li>Broadcast Receiver（广播接收器）</li><li>Content Provider（内容提供者）</li></ol><h3 id="activity-活动" tabindex="-1">Activity（活动） <a class="header-anchor" href="#activity-活动" aria-hidden="true">#</a></h3><p>一个Activity活动就是一个页面</p><h4 id="创建活动" tabindex="-1">创建活动 <a class="header-anchor" href="#创建活动" aria-hidden="true">#</a></h4><p>创建好活动需要在AndroidManifest.xml文件中注册Activity。加上<code>&lt;intent-filter&gt;</code>标签可以使该活动作为第一个显示的页面。</p><h4 id="销毁活动" tabindex="-1">销毁活动 <a class="header-anchor" href="#销毁活动" aria-hidden="true">#</a></h4><p>有2种方式</p><ol><li>按返回按键</li><li>使用Activity类提供的finish方法</li></ol><h4 id="使用intent跳转页面-活动" tabindex="-1">使用Intent跳转页面（活动） <a class="header-anchor" href="#使用intent跳转页面-活动" aria-hidden="true">#</a></h4><p>Intent又分为显式Intent和隐式Intent</p><ul><li>显式Intent：只能启动本应用的Activity</li><li>隐式Intetn：可以启动本应用的Activity和其他应用的Activity</li></ul><h5 id="显式intent" tabindex="-1">显式Intent <a class="header-anchor" href="#显式intent" aria-hidden="true">#</a></h5><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">Intent</span><span style="color:#A6ACCD;"> intent </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Intent</span><span style="color:#89DDFF;">(this,</span><span style="color:#A6ACCD;"> XxxActivity</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">startActivity</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">intent</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h5 id="隐式intent" tabindex="-1">隐式Intent <a class="header-anchor" href="#隐式intent" aria-hidden="true">#</a></h5><p>在AndroidManifest.xml的Activity的intent-filter标签中添加category标签</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">Intent</span><span style="color:#A6ACCD;"> intent </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Intent</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.xxx.xxx.XxxAction</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">intent</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addCategory</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.xxx.xxx.XxxCategory</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">startActivity</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">intent</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h5 id="使用intent跳转页面时传递数据" tabindex="-1">使用Intent跳转页面时传递数据 <a class="header-anchor" href="#使用intent跳转页面时传递数据" aria-hidden="true">#</a></h5><p>使用Intent的putExtra()方法可以传递数据</p><p>使用Activity类的getIntent()方法接收传递过来的数据，可以接收多种类型的数据，有不同的实现方法。</p><h5 id="跳转页面后-返回上一个页面时需要带上数据" tabindex="-1">跳转页面后，返回上一个页面时需要带上数据 <a class="header-anchor" href="#跳转页面后-返回上一个页面时需要带上数据" aria-hidden="true">#</a></h5><p>使用startActivityForResult()方法，该方法有2个参数，第一个为Intent对象，第二个为请求码，用于标识数据的来源，判断是否是这个Activity来接收。还需要处理用户按下返回键的行为，因为不做处理的情况下，按下返回键并不能带着数据返回给上一个Activity，所以要重写返回按钮的监听事件onBackPressed方法，加入处理代码即可。</p><h4 id="活动的生命周期" tabindex="-1">活动的生命周期 <a class="header-anchor" href="#活动的生命周期" aria-hidden="true">#</a></h4><p>Android是使用任务来保存Activity的，该任务是一个桟，打开一个活动就往桟里添加一个数据，退出一个页面就弹出一个数据，显示栈顶数据给用户。</p><h5 id="活动的状态" tabindex="-1">活动的状态 <a class="header-anchor" href="#活动的状态" aria-hidden="true">#</a></h5><ol><li>运行状态</li><li>暂停状态</li><li>停止状态</li><li>销毁状态</li></ol><p>生命周期图</p><p><img src="https://upload-images.jianshu.io/upload_images/19899316-00e4bd10008c4788.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/485/format/webp#alt=img" alt=""></p><h4 id="活动的启动模式" tabindex="-1">活动的启动模式 <a class="header-anchor" href="#活动的启动模式" aria-hidden="true">#</a></h4><ol><li>standard</li><li>singleTop</li><li>singleTask</li><li>singleInstance</li></ol><h2 id="常用控件" tabindex="-1">常用控件 <a class="header-anchor" href="#常用控件" aria-hidden="true">#</a></h2><ol><li>TextView</li><li>Button</li><li>EditView</li><li>ImageView</li><li>ProgressBar</li><li>AlertDialog</li><li>ProgressDialog</li><li>ListView</li><li>RecycleView</li></ol><p>ListView和RecycleView需要准备适配器来准备数据</p><h2 id="常用布局" tabindex="-1">常用布局 <a class="header-anchor" href="#常用布局" aria-hidden="true">#</a></h2><ol><li>线性布局LinearLayout</li><li>相对布局RelativeLayout</li><li>帧布局FrameLayout</li><li>百分比布局PercentFrameLayout</li></ol><h2 id="fragment-碎片" tabindex="-1">Fragment（碎片） <a class="header-anchor" href="#fragment-碎片" aria-hidden="true">#</a></h2><p>Fragment的生命周期</p><h2 id="android四大组件-二-广播接收器" tabindex="-1">Android四大组件（二） - 广播接收器 <a class="header-anchor" href="#android四大组件-二-广播接收器" aria-hidden="true">#</a></h2><p>广播接收器分类2种，一种是标准广播，另一种是有序广播。</p><h3 id="动态注册广播" tabindex="-1">动态注册广播 <a class="header-anchor" href="#动态注册广播" aria-hidden="true">#</a></h3><h3 id="静态注册广播" tabindex="-1">静态注册广播 <a class="header-anchor" href="#静态注册广播" aria-hidden="true">#</a></h3>`,46),s=[l];function r(o,d,c,p,h,y){return e(),i("div",null,s)}const F=a(t,[["render",r]]);export{u as __pageData,F as default};
