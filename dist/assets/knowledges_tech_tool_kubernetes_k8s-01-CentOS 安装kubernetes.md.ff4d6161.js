import{_ as s,o as a,c as n,b as l}from"./app.d2d47940.js";const A=JSON.parse('{"title":"CentOS 安装kubernetes","description":"","frontmatter":{"date":"2020-02-29T00:00:00.000Z","categories":["运维"],"tags":["kubernetes"]},"headers":[{"level":2,"title":"安装docker","slug":"安装docker","link":"#安装docker","children":[]},{"level":2,"title":"安装 nfs-utils","slug":"安装-nfs-utils","link":"#安装-nfs-utils","children":[]},{"level":2,"title":"K8S基本配置","slug":"k8s基本配置","link":"#k8s基本配置","children":[]},{"level":2,"title":"初始化 master 节点","slug":"初始化-master-节点","link":"#初始化-master-节点","children":[]},{"level":2,"title":"初始化 node节点","slug":"初始化-node节点","link":"#初始化-node节点","children":[{"level":3,"title":"获得 join命令参数","slug":"获得-join命令参数","link":"#获得-join命令参数","children":[]},{"level":3,"title":"初始化node","slug":"初始化node","link":"#初始化node","children":[]},{"level":3,"title":"检查初始化结果","slug":"检查初始化结果","link":"#检查初始化结果","children":[]}]},{"level":2,"title":"移除 node 节点","slug":"移除-node-节点","link":"#移除-node-节点","children":[]}],"relativePath":"knowledges/tech/tool/kubernetes/k8s-01-CentOS 安装kubernetes.md","lastUpdated":1678618356000}'),e={name:"knowledges/tech/tool/kubernetes/k8s-01-CentOS 安装kubernetes.md"},p=l(`<h1 id="centos-安装kubernetes" tabindex="-1">CentOS 安装kubernetes <a class="header-anchor" href="#centos-安装kubernetes" aria-hidden="true">#</a></h1><p>机器配置要求：</p><ul><li></li></ul><p>3台 机器</p><ul><li>第1台：my-master 这台机必须配置2个cpu以上， 2G内存以上</li><li>第2台：my-node-1（1核2G）</li><li>第2台：my-node-2（1核2G）</li><li></li></ul><p>系统Cent OS 7.6 或ubuntu</p><h2 id="安装docker" tabindex="-1">安装docker <a class="header-anchor" href="#安装docker" aria-hidden="true">#</a></h2><p>（安装过docker的可以跳过此步骤）</p><p>设置 yum repository</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yum-utils</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">device-mapper-persistent-data</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lvm2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yum-config-manager</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--add-repo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span>
<span class="line"></span></code></pre></div><p>安装并启动 docker</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker-ce-18.09.7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker-ce-cli-18.09.7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">containerd.io</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span>
<span class="line"></span></code></pre></div><p>检查 docker 版本</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">version</span></span>
<span class="line"></span></code></pre></div><h2 id="安装-nfs-utils" tabindex="-1">安装 nfs-utils <a class="header-anchor" href="#安装-nfs-utils" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nfs-utils</span></span>
<span class="line"></span></code></pre></div><p>必须先安装 nfs-utils 才能挂载 nfs 网络存储</p><h2 id="k8s基本配置" tabindex="-1">K8S基本配置 <a class="header-anchor" href="#k8s基本配置" aria-hidden="true">#</a></h2><p>配置K8S的yum源</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;EOF</span><span style="color:#C3E88D;"> &gt; /etc/yum.repos.d/kubernetes.repo</span></span>
<span class="line"><span style="color:#C3E88D;">[kubernetes]</span></span>
<span class="line"><span style="color:#C3E88D;">name=Kubernetes</span></span>
<span class="line"><span style="color:#C3E88D;">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span>
<span class="line"><span style="color:#C3E88D;">enabled=1</span></span>
<span class="line"><span style="color:#C3E88D;">gpgcheck=0</span></span>
<span class="line"><span style="color:#C3E88D;">repo_gpgcheck=0</span></span>
<span class="line"><span style="color:#C3E88D;">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span></span>
<span class="line"><span style="color:#C3E88D;">       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span>
<span class="line"></span></code></pre></div><p>关闭 防火墙、SeLinux、swap</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">firewalld</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">disable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">firewalld</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">setenforce</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#FFCB6B;">sed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">s/SELINUX=enforcing/SELINUX=disabled/g</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/selinux/config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">swapoff</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span></span>
<span class="line"><span style="color:#FFCB6B;">yes</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/fstab</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/fstab_bak</span></span>
<span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/fstab_bak</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">swap</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/fstab</span></span>
<span class="line"></span></code></pre></div><p>修改 /etc/sysctl.conf</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/sysctl.conf</span></span>
<span class="line"></span></code></pre></div><p>在文件最后面添加</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">net.ipv4.ip_forward</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">net.bridge.bridge-nf-call-ip6tables</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">net.bridge.bridge-nf-call-iptables</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span></code></pre></div><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200229091826-112446.png#alt=image-20190715085036593" alt=""></p><p>执行命令以应用</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">sysctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span></span>
<span class="line"></span></code></pre></div><p>安装kubelet、kubeadm、kubectl</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kubelet-1.15.1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kubeadm-1.15.1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kubectl-1.15.1</span></span>
<span class="line"></span></code></pre></div><p>修改docker Cgroup Driver为systemd</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/lib/systemd/system/docker.service</span></span>
<span class="line"></span></code></pre></div><p>向其中添加</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">--</span><span style="color:#82AAFF;">exec</span><span style="color:#FFCB6B;">-opt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native.cgroupdriver=systemd</span></span>
<span class="line"></span></code></pre></div><p>设置 docker 镜像</p><p>执行以下命令使用 docker 国内镜像，提高 docker 镜像下载速度和稳定性</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-sSL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://get.daocloud.io/daotools/set_mirror.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://f1361db2.m.daocloud.io</span></span>
<span class="line"></span></code></pre></div><p>重启 docker，并启动 kubelet</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在 master 节点和 node 节点都要执行</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">daemon-reload</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kubelet</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kubelet</span></span>
<span class="line"></span></code></pre></div><h2 id="初始化-master-节点" tabindex="-1">初始化 master 节点 <a class="header-anchor" href="#初始化-master-节点" aria-hidden="true">#</a></h2><p>以 root 身份在 my-master 机器上执行</p><p>配置 apiserver.demo 的域名</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x.x.x.x  apiserver.demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/hosts</span></span>
<span class="line"></span></code></pre></div><p>请替换其中的 x.x.x.x 为您的 my-master 的实际 ip 地址</p><p>创建 ./kubeadm-config.yaml</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;EOF</span><span style="color:#C3E88D;"> &gt; ./kubeadm-config.yaml</span></span>
<span class="line"><span style="color:#C3E88D;">apiVersion: kubeadm.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#C3E88D;">kind: ClusterConfiguration</span></span>
<span class="line"><span style="color:#C3E88D;">kubernetesVersion: v1.15.1</span></span>
<span class="line"><span style="color:#C3E88D;">imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span></span>
<span class="line"><span style="color:#C3E88D;">controlPlaneEndpoint: &quot;apiserver.demo:6443&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">networking:</span></span>
<span class="line"><span style="color:#C3E88D;">  podSubnet: &quot;10.100.0.1/20&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span>
<span class="line"></span></code></pre></div><p>podSubnet 所使用的网段不能与节点所在的网段重叠</p><p>初始化 apiserver</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">kubeadm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--config=kubeadm-config.yaml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--upload-certs</span></span>
<span class="line"></span></code></pre></div><p>根据您服务器网速的情况，您需要等候 1 – 10 分钟</p><p>执行结果如下图所示：</p><p>初始化 root 用户的 kubectl 配置</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-rf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/root/.kube/</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/root/.kube/</span></span>
<span class="line"><span style="color:#FFCB6B;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/kubernetes/admin.conf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/root/.kube/config</span></span>
<span class="line"></span></code></pre></div><p>安装 calico</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apply</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://docs.projectcalico.org/v3.</span><span style="color:#F78C6C;">6</span><span style="color:#C3E88D;">/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/</span><span style="color:#F78C6C;">1.7</span><span style="color:#C3E88D;">/calico.yaml</span></span>
<span class="line"></span></code></pre></div><p>等待calico安装就绪：</p><p>执行如下命令，等待 3-10 分钟，直到所有的容器组处于 Running 状态</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kubectl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-n</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kube-system</span></span>
<span class="line"></span></code></pre></div><p>检查 master 初始化结果</p><p>在 master 节点 my-master 上执行</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nodes</span></span>
<span class="line"></span></code></pre></div><h2 id="初始化-node节点" tabindex="-1">初始化 node节点 <a class="header-anchor" href="#初始化-node节点" aria-hidden="true">#</a></h2><h3 id="获得-join命令参数" tabindex="-1">获得 join命令参数 <a class="header-anchor" href="#获得-join命令参数" aria-hidden="true">#</a></h3><p>在 master 节点 my-master 节点执行</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">kubeadm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">token</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--print-join-command</span></span>
<span class="line"></span></code></pre></div><p>可获取kubeadm join 命令及参数，如下所示</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># kubeadm token create 命令的输出</span></span>
<span class="line"><span style="color:#FFCB6B;">kubeadm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">join</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apiserver.demo:</span><span style="color:#F78C6C;">6443</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--token</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mpfjma.4vjjg8flqihor4vt</span><span style="color:#A6ACCD;">     </span><span style="color:#C3E88D;">--discovery-token-ca-cert-hash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303</span></span>
<span class="line"></span></code></pre></div><h3 id="初始化node" tabindex="-1">初始化node <a class="header-anchor" href="#初始化node" aria-hidden="true">#</a></h3><p>针对所有的 node 节点执行</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 node 节点执行</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x.x.x.x  apiserver.demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/hosts</span></span>
<span class="line"><span style="color:#FFCB6B;">kubeadm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">join</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apiserver.demo:</span><span style="color:#F78C6C;">6443</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--token</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mpfjma.4vjjg8flqihor4vt</span><span style="color:#A6ACCD;">     </span><span style="color:#C3E88D;">--discovery-token-ca-cert-hash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303</span></span>
<span class="line"></span></code></pre></div><ul><li>将 x.x.x.x 替换为 my-master 的实际 ip</li><li>将 kubeadm join 命令后的参数替换为上一个步骤中实际从 my-master 节点获得的参数</li></ul><h3 id="检查初始化结果" tabindex="-1">检查初始化结果 <a class="header-anchor" href="#检查初始化结果" aria-hidden="true">#</a></h3><p>在 master 节点 my-master 上执行</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nodes</span></span>
<span class="line"></span></code></pre></div><h2 id="移除-node-节点" tabindex="-1">移除 node 节点 <a class="header-anchor" href="#移除-node-节点" aria-hidden="true">#</a></h2><p>正常情况下，无需移除 node 节点，如果添加到集群出错，可以移除 node 节点，再重新尝试添加</p><p>在准备移除的 node 节点上执行</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 node 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">kubeadm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span></span>
<span class="line"></span></code></pre></div><p>在 master 节点 my-master 上执行</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 只在 master 节点执行</span></span>
<span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">delete</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo-node-x-x</span></span>
<span class="line"></span></code></pre></div><ul><li>将 demo-node-x-x 替换为要移除的 node 节点的名字</li><li>node 节点的名字可以通过在节点 my-master 上执行 kubectl get nodes 命令获得</li></ul>`,82),o=[p];function t(c,r,i,C,y,d){return a(),n("div",null,o)}const h=s(e,[["render",t]]);export{A as __pageData,h as default};
