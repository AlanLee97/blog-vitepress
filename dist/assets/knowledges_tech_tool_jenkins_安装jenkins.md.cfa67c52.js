import{_ as s,o as n,c as a,b as e}from"./app.d2d47940.js";const m=JSON.parse('{"title":"安装jenkins","description":"","frontmatter":{"date":"2020-02-24T00:00:00.000Z","categories":["运维"],"tags":["jenkins"]},"headers":[],"relativePath":"knowledges/tech/tool/jenkins/安装jenkins.md","lastUpdated":1678618356000}'),l={name:"knowledges/tech/tool/jenkins/安装jenkins.md"},p=e(`<h1 id="安装jenkins" tabindex="-1">安装jenkins <a class="header-anchor" href="#安装jenkins" aria-hidden="true">#</a></h1><p>在docker中安装jenkins</p><p>输入以下代码</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">root</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8001</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/var/jenkins_home:/var/jenkins_home</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/bin/docker:/usr/bin/docker</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/lib64/libltdl.so.</span><span style="color:#F78C6C;">7</span><span style="color:#C3E88D;">:/usr/lib64/libltdl.so.</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/profile:/etc/profile</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/var/run/docker.sock:/var/run/docker.sock</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/maven/maven3:/usr/local/maven/maven3</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-0.el7_7.x86_64:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-0.el7_7.x86_64</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$HOME</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:/home</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jenkins2</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">jenkinsci/blueocean</span></span>
<span class="line"></span></code></pre></div><p>复制密码</p><p>docker logs jenkinsci/blueocean容器id</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">790bf04c1383422c9da78397bcb7cbef</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">c6f6cba51094442b8d966b9aec592435</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>访问localhost:8000</p><p>输入刚刚的一串密码</p><p>进入插件安装页面</p><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200221131921-120772.png#alt=image-20200221131921028" alt=""></p><p>安装完之后创建账户</p><p>实例配置</p><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200221144024-647535.png#alt=image-20200221144023800" alt=""></p><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200221144041-516818.png#alt=image-20200221144041189" alt=""></p><p>进入主界面</p><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200221144320-539671.png#alt=image-20200221144319625" alt=""></p><p>创建项目</p><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200221144337-897131.png#alt=image-20200221144336311" alt=""></p><p>输入任务名称--&gt;点击流水线--&gt;点确定</p><p>在 <strong>Description</strong> 字段中填写流水线的简要描述 （例如 <code>一个演示如何使用Jenkins构建Maven管理的简单Java应用程序的入门级流水线。</code>）</p><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200221144607-603556.png#alt=image-20200221144606880" alt=""></p><p>在 <strong>Definition</strong> 域中，选择 <strong>Pipeline script from SCM</strong> 选项。此选项指示Jenkins从源代码管理（SCM）仓库获取你的流水线， 这里的仓库就是你clone到本地的Git仓库。</p><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200221144927-676464.png#alt=image-20200221144926604" alt=""></p><p>在 <strong>SCM</strong> 域中，选择 <strong>Git</strong>。</p><p><img src="https://alanlee-image-bed.oss-cn-shenzhen.aliyuncs.com/note_images/20200221145055-950423.png#alt=image-20200221145055435" alt=""></p><p>在 <strong>Repository URL</strong> 域中，填写你本地仓库的 <a href="https://jenkins.io/zh/doc/tutorials/build-a-java-app-with-maven/#fork-sample-repository" target="_blank" rel="noreferrer">目录路径</a>， 这是从你主机上的用户账户home目录映射到Jenkins容器的 <code>/home</code> 目录：</p><ul><li>MacOS系统 - <code>/home/Documents/GitHub/simple-java-maven-app</code></li><li>Linux系统 - <code>/home/GitHub/simple-java-maven-app</code></li><li>Windows系统 - <code>/home/Documents/GitHub/simple-java-maven-app</code></li></ul><p>在克隆下来的java maven项目中创建Jenkinsfile文件</p><p>内容如下</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">pipeline {</span></span>
<span class="line"><span style="color:#A6ACCD;">    agent {</span></span>
<span class="line"><span style="color:#A6ACCD;">        docker {</span></span>
<span class="line"><span style="color:#A6ACCD;">            image &#39;maven:3-alpine&#39; </span></span>
<span class="line"><span style="color:#A6ACCD;">            args &#39;-v /root/.m2:/root/.m2&#39; </span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    stages {</span></span>
<span class="line"><span style="color:#A6ACCD;">        stage(&#39;Build&#39;) { </span></span>
<span class="line"><span style="color:#A6ACCD;">            steps {</span></span>
<span class="line"><span style="color:#A6ACCD;">                sh &#39;mvn -B -DskipTests clean package&#39; </span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,31),o=[p];function t(c,r,i,C,A,y){return n(),a("div",null,o)}const g=s(l,[["render",t]]);export{m as __pageData,g as default};
