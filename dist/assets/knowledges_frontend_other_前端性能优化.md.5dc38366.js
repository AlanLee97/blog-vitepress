import{_ as s,o as n,c as i,b as e,a as l,h as a}from"./app.d2d47940.js";const f=JSON.parse('{"title":"思维导图","description":"","frontmatter":{},"headers":[{"level":2,"title":"图片格式和应用场景","slug":"图片格式和应用场景","link":"#图片格式和应用场景","children":[]},{"level":2,"title":"图片优化细则","slug":"图片优化细则","link":"#图片优化细则","children":[{"level":3,"title":"用工具压缩图片","slug":"用工具压缩图片","link":"#用工具压缩图片","children":[]},{"level":3,"title":"图片尺寸随网络环境变化","slug":"图片尺寸随网络环境变化","link":"#图片尺寸随网络环境变化","children":[]},{"level":3,"title":"响应式图片","slug":"响应式图片","link":"#响应式图片","children":[]},{"level":3,"title":"逐步加载图像","slug":"逐步加载图像","link":"#逐步加载图像","children":[]},{"level":3,"title":"替换图片","slug":"替换图片","link":"#替换图片","children":[]}]},{"level":2,"title":"图片服务器自动优化","slug":"图片服务器自动优化","link":"#图片服务器自动优化","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"处理方式","slug":"处理方式","link":"#处理方式","children":[]},{"level":3,"title":"技术实现","slug":"技术实现","link":"#技术实现","children":[]},{"level":3,"title":"实例展示","slug":"实例展示","link":"#实例展示","children":[]}]},{"level":2,"title":"HTML优化细则","slug":"html优化细则","link":"#html优化细则","children":[{"level":3,"title":"精简HTML代码","slug":"精简html代码","link":"#精简html代码","children":[]},{"level":3,"title":"文件放在合适位置","slug":"文件放在合适位置","link":"#文件放在合适位置","children":[]},{"level":3,"title":"增强用户体验","slug":"增强用户体验","link":"#增强用户体验","children":[]}]},{"level":2,"title":"CSS优化细则","slug":"css优化细则","link":"#css优化细则","children":[{"level":3,"title":"提升CSS渲染性能","slug":"提升css渲染性能","link":"#提升css渲染性能","children":[]},{"level":3,"title":"合理使用CSS选择器","slug":"合理使用css选择器","link":"#合理使用css选择器","children":[]},{"level":3,"title":"提升CSS文件加载性能","slug":"提升css文件加载性能","link":"#提升css文件加载性能","children":[]},{"level":3,"title":"精简CSS代码","slug":"精简css代码","link":"#精简css代码","children":[]},{"level":3,"title":"合理使用Web Fonts","slug":"合理使用web-fonts","link":"#合理使用web-fonts","children":[]},{"level":3,"title":"CSS动画优化","slug":"css动画优化","link":"#css动画优化","children":[]}]},{"level":2,"title":"JS优化细则","slug":"js优化细则","link":"#js优化细则","children":[{"level":3,"title":"JS变量和函数优化","slug":"js变量和函数优化","link":"#js变量和函数优化","children":[]},{"level":3,"title":"JS动画优化","slug":"js动画优化","link":"#js动画优化","children":[]},{"level":3,"title":"合理使用缓存","slug":"合理使用缓存","link":"#合理使用缓存","children":[]}]},{"level":2,"title":"JS缓存优化","slug":"js缓存优化","link":"#js缓存优化","children":[{"level":3,"title":"Cookie","slug":"cookie","link":"#cookie","children":[]},{"level":3,"title":"SessionStorage","slug":"sessionstorage","link":"#sessionstorage","children":[]},{"level":3,"title":"LocalStorage","slug":"localstorage","link":"#localstorage","children":[]}]},{"level":2,"title":"JS模块化加载方案和选型","slug":"js模块化加载方案和选型","link":"#js模块化加载方案和选型","children":[{"level":3,"title":"CommonJS","slug":"commonjs","link":"#commonjs","children":[]},{"level":3,"title":"AMD（Asynchronous Module Definition）规范","slug":"amd-asynchronous-module-definition-规范","link":"#amd-asynchronous-module-definition-规范","children":[]},{"level":3,"title":"CMD（CommonModule Definition）规范","slug":"cmd-commonmodule-definition-规范","link":"#cmd-commonmodule-definition-规范","children":[]},{"level":3,"title":"ES6 import","slug":"es6-import","link":"#es6-import","children":[]}]},{"level":2,"title":"减少回流和重绘重要举措","slug":"减少回流和重绘重要举措","link":"#减少回流和重绘重要举措","children":[{"level":3,"title":"CSS","slug":"css","link":"#css","children":[]},{"level":3,"title":"JS","slug":"js","link":"#js","children":[]}]},{"level":2,"title":"DOM编程优化的","slug":"dom编程优化的","link":"#dom编程优化的","children":[{"level":3,"title":"控制DOM的大小","slug":"控制dom的大小","link":"#控制dom的大小","children":[]},{"level":3,"title":"简化DOM操作","slug":"简化dom操作","link":"#简化dom操作","children":[]}]},{"level":2,"title":"静态文件压缩工具","slug":"静态文件压缩工具","link":"#静态文件压缩工具","children":[{"level":3,"title":"HTML压缩工具","slug":"html压缩工具","link":"#html压缩工具","children":[]},{"level":3,"title":"CSS压缩工具","slug":"css压缩工具","link":"#css压缩工具","children":[]},{"level":3,"title":"JS压缩工具","slug":"js压缩工具","link":"#js压缩工具","children":[]}]},{"level":2,"title":"静态文件打包方案","slug":"静态文件打包方案","link":"#静态文件打包方案","children":[]},{"level":2,"title":"静态文件版本号更新策略","slug":"静态文件版本号更新策略","link":"#静态文件版本号更新策略","children":[]},{"level":2,"title":"前端构建工具选型","slug":"前端构建工具选型","link":"#前端构建工具选型","children":[]},{"level":2,"title":"webpack打包优化","slug":"webpack打包优化","link":"#webpack打包优化","children":[]},{"level":2,"title":"浏览器渲染过程","slug":"浏览器渲染过程","link":"#浏览器渲染过程","children":[]},{"level":2,"title":"页面渲染技术架构和方案总览","slug":"页面渲染技术架构和方案总览","link":"#页面渲染技术架构和方案总览","children":[{"level":3,"title":"服务端渲染","slug":"服务端渲染","link":"#服务端渲染","children":[]},{"level":3,"title":"客户端渲染","slug":"客户端渲染","link":"#客户端渲染","children":[]}]},{"level":2,"title":"单页面技术","slug":"单页面技术","link":"#单页面技术","children":[]},{"level":2,"title":"同构直出技术","slug":"同构直出技术","link":"#同构直出技术","children":[]},{"level":2,"title":"PWA技术方案","slug":"pwa技术方案","link":"#pwa技术方案","children":[]},{"level":2,"title":"页面加载策略优化","slug":"页面加载策略优化","link":"#页面加载策略优化","children":[{"level":3,"title":"懒加载","slug":"懒加载","link":"#懒加载","children":[]},{"level":3,"title":"预加载","slug":"预加载","link":"#预加载","children":[]},{"level":3,"title":"预渲染","slug":"预渲染","link":"#预渲染","children":[]},{"level":3,"title":"按需加载","slug":"按需加载","link":"#按需加载","children":[]},{"level":3,"title":"楼层式加载","slug":"楼层式加载","link":"#楼层式加载","children":[]}]},{"level":2,"title":"接口服务调用优化","slug":"接口服务调用优化","link":"#接口服务调用优化","children":[]},{"level":2,"title":"接口缓存策略优化","slug":"接口缓存策略优化","link":"#接口缓存策略优化","children":[]},{"level":2,"title":"React Native内核及优势","slug":"react-native内核及优势","link":"#react-native内核及优势","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"底层原理","slug":"底层原理","link":"#底层原理","children":[]}]},{"level":2,"title":"小程序内核及优势","slug":"小程序内核及优势","link":"#小程序内核及优势","children":[{"level":3,"title":"优点","slug":"优点-1","link":"#优点-1","children":[]},{"level":3,"title":"底层原理","slug":"底层原理-1","link":"#底层原理-1","children":[]}]},{"level":2,"title":"Flutter内核及优势","slug":"flutter内核及优势","link":"#flutter内核及优势","children":[{"level":3,"title":"优点","slug":"优点-2","link":"#优点-2","children":[]},{"level":3,"title":"底层原理","slug":"底层原理-2","link":"#底层原理-2","children":[]}]},{"level":2,"title":"合理配置CDN缓存","slug":"合理配置cdn缓存","link":"#合理配置cdn缓存","children":[{"level":3,"title":"CDN定义","slug":"cdn定义","link":"#cdn定义","children":[]},{"level":3,"title":"CDN优点","slug":"cdn优点","link":"#cdn优点","children":[]},{"level":3,"title":"CDN回源","slug":"cdn回源","link":"#cdn回源","children":[]},{"level":3,"title":"CDN缓存","slug":"cdn缓存","link":"#cdn缓存","children":[]},{"level":3,"title":"CDN缓存设置","slug":"cdn缓存设置","link":"#cdn缓存设置","children":[]},{"level":3,"title":"CDN灰度发布","slug":"cdn灰度发布","link":"#cdn灰度发布","children":[]}]},{"level":2,"title":"减少HTTP请求数","slug":"减少http请求数","link":"#减少http请求数","children":[]},{"level":2,"title":"减少cookie的策略和益处","slug":"减少cookie的策略和益处","link":"#减少cookie的策略和益处","children":[]},{"level":2,"title":"服务端缓存配置和优化","slug":"服务端缓存配置和优化","link":"#服务端缓存配置和优化","children":[{"level":3,"title":"Expires","slug":"expires","link":"#expires","children":[]},{"level":3,"title":"Cache-Control","slug":"cache-control","link":"#cache-control","children":[]},{"level":3,"title":"ETag","slug":"etag","link":"#etag","children":[]},{"level":3,"title":"Last-Modified","slug":"last-modified","link":"#last-modified","children":[]},{"level":3,"title":"Date","slug":"date","link":"#date","children":[]}]},{"level":2,"title":"服务端开启gzip压缩","slug":"服务端开启gzip压缩","link":"#服务端开启gzip压缩","children":[{"level":3,"title":"优点","slug":"优点-3","link":"#优点-3","children":[]},{"level":3,"title":"配置方法","slug":"配置方法","link":"#配置方法","children":[]}]},{"level":2,"title":"网站开启HTTPS","slug":"网站开启https","link":"#网站开启https","children":[{"level":3,"title":"概念","slug":"概念-1","link":"#概念-1","children":[]},{"level":3,"title":"工作原理","slug":"工作原理","link":"#工作原理","children":[]}]},{"level":2,"title":"升级HTTP2","slug":"升级http2","link":"#升级http2","children":[{"level":3,"title":"特性","slug":"特性","link":"#特性","children":[]},{"level":3,"title":"优点","slug":"优点-4","link":"#优点-4","children":[]}]}],"relativePath":"knowledges/frontend/other/前端性能优化.md","lastUpdated":1678293877000}'),t={name:"knowledges/frontend/other/前端性能优化.md"},o=e(`<h1 id="思维导图" tabindex="-1">思维导图 <a class="header-anchor" href="#思维导图" aria-hidden="true">#</a></h1><p><img src="https://cdn.nlark.com/yuque/0/2021/jpeg/743297/1639615738104-a5e7df3f-4f79-41bf-be66-2643539986d8.jpeg" alt=""></p><h1 id="静态资源优化" tabindex="-1">静态资源优化 <a class="header-anchor" href="#静态资源优化" aria-hidden="true">#</a></h1><h2 id="图片格式和应用场景" tabindex="-1">图片格式和应用场景 <a class="header-anchor" href="#图片格式和应用场景" aria-hidden="true">#</a></h2><p><strong>JPEG(Joint Photographic Experts Group)</strong></p><ul><li>针对彩色照片而广泛使用的有损压缩图片格式</li><li>常用扩展名.jpg、.jpeg、.jpe。常用于存储和传输照片</li><li>不适合线条图形和文字、图标图形，不支持透明度</li><li>适合颜色丰富的照片、彩色大图、通栏banner图、结构不规则图形</li></ul><p><strong>PNG(Portable Network Graphic)</strong></p><ul><li>一种无损压缩的位图图形格式，支持索引、灰度、RGB三种颜色方案以及Alpha通道等特性。</li><li>PNG最初是用来代替GIF的，能够显示256色，文件比JPEG/GIF大，但是PNG的图片质量好。</li><li>不适用于无损存储、彩色图像</li><li>适合纯色、透明、线条绘图；边缘清晰、有大块相同颜色的区域；颜色数量少但需要半透明的图片。</li></ul><p><strong>GIF(Graphic Interchange Format)</strong></p><ul><li>一种位图图形文件格式，以8位色重现真色彩的图像，采用LZW压缩算法进行编码。</li><li>支持256色；仅支持完全透明和完全不透明；有动画的图片；</li><li>不适合存储彩色照片</li><li>适合动画、图标。</li></ul><p><strong>WEBP</strong></p><ul><li>一种现代图像格式，可为图像提供无损压缩和有损压缩</li><li>有点是在体积小的情况下能保证一定的图像质量，可插入多帧，实现动画效果；可以设置透明度；</li><li>无损压缩比PNG小26%；有损压缩比JPEG小25%~34%；动画比GIF更好。</li><li>不适合彩色图片</li><li>适用于图像和半透明图像</li></ul><h2 id="图片优化细则" tabindex="-1">图片优化细则 <a class="header-anchor" href="#图片优化细则" aria-hidden="true">#</a></h2><h3 id="用工具压缩图片" tabindex="-1">用工具压缩图片 <a class="header-anchor" href="#用工具压缩图片" aria-hidden="true">#</a></h3><p><strong>压缩png</strong></p><ul><li>node-pngquant-native <ul><li>跨平台，压缩比高，压缩png24非常好</li></ul></li></ul><p><strong>压缩JPEG</strong></p><ul><li>jpegtran <ul><li>跨平台</li></ul></li><li>使用方法 <ul><li>jpegtran -copy none -optimize -outfile out.jpg in.jpg</li></ul></li></ul><p><strong>压缩GIF</strong></p><ul><li>gifsicle <ul><li>通过改变每帧比例，减小gif文件大小，同时可以使用透明来达到更新的文件大小，目前公认的姐姐方案</li></ul></li><li>使用方式 <ul><li>设置压缩级别：gifsicle --optimize=3 -o out.gif in.gif</li><li>将透明部分截去： gifsicle --optimize=3 --crop-transparency -o out.gif in.gif</li></ul></li></ul><h3 id="图片尺寸随网络环境变化" tabindex="-1">图片尺寸随网络环境变化 <a class="header-anchor" href="#图片尺寸随网络环境变化" aria-hidden="true">#</a></h3><ul><li>不同网络环境（wifi/4G/3G）下，加载不同尺寸和像素的图片，通过图片URL后缀不同参数改变 <ul><li>例如：<a href="https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.jpg" target="_blank" rel="noreferrer">https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.jpg</a></li><li><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639156111387-0c467653-a448-46c4-8a76-ee6b410267bb.png#clientId=uc25d6549-9644-4&amp;from=paste&amp;id=u33427fc4&amp;name=image.png&amp;originHeight=450&amp;originWidth=450&amp;originalType=url&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=123685&amp;status=done&amp;style=none&amp;taskId=u80cbfeb1-b3e4-4b44-a797-a10f4212953&amp;title=" alt="image.png"></li></ul></li></ul><h3 id="响应式图片" tabindex="-1">响应式图片 <a class="header-anchor" href="#响应式图片" aria-hidden="true">#</a></h3><ul><li>JavaScript检测窗口大小</li><li>CSS媒体查询</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">640px</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">img</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">640px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>img标签属性</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">srcset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img-320w.jpg, img-640w.jpg 2x, img-960w.jpg 3x</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img-960w.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="逐步加载图像" tabindex="-1">逐步加载图像 <a class="header-anchor" href="#逐步加载图像" aria-hidden="true">#</a></h3><ul><li>使用统一占位符</li><li>使用LQIP（低质量图片占位符）</li><li>使用SQIP（基于SVG的图片占位符）</li></ul><h3 id="替换图片" tabindex="-1">替换图片 <a class="header-anchor" href="#替换图片" aria-hidden="true">#</a></h3><ul><li>Web Font代替图标</li><li>使用Data URI代替图片</li><li>采用雪碧图</li></ul><h2 id="图片服务器自动优化" tabindex="-1">图片服务器自动优化 <a class="header-anchor" href="#图片服务器自动优化" aria-hidden="true">#</a></h2><h3 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-hidden="true">#</a></h3><p>图片服务器自动化优化是可以在图片URL链接上增加不同特殊参数，服务器自动化生成不同格式、大小、指令、特殊能力等的图片。</p><h3 id="处理方式" tabindex="-1">处理方式 <a class="header-anchor" href="#处理方式" aria-hidden="true">#</a></h3><ul><li>图片裁剪</li><li>图片格式转换</li><li>图片处理，如添加水印、模糊等处理</li><li>AI能力，如鉴黄、智能扣图等</li></ul><h3 id="技术实现" tabindex="-1">技术实现 <a class="header-anchor" href="#技术实现" aria-hidden="true">#</a></h3><ol><li>将图片压缩、裁剪、格式转换等本地工具部署至线上图片服务器集群上</li><li>本地上传图片至图片服务器后，服务器默处理转换成多种图片格式，并推送至图片CDN服务器上</li><li>图片服务器开放多个域名，同时对各个业务线开放不同的业务路径</li><li>外网用户请求带特殊参数的图片URL时，图片服务器根据URL中不同的参数类型，从本地缓存中取得，或者实时对图片即时处理，并返回给客户端</li></ol><h3 id="实例展示" tabindex="-1">实例展示 <a class="header-anchor" href="#实例展示" aria-hidden="true">#</a></h3><ul><li>默认jpg <ul><li><a href="https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.jpg" target="_blank" rel="noreferrer">https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.jpg</a></li><li><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639182513998-c0eb36f6-a18c-412a-9857-4fc82b737b0b.png#clientId=u8d4423ab-33dd-4&amp;from=paste&amp;height=389&amp;id=u6d740107&amp;name=image.png&amp;originHeight=389&amp;originWidth=926&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=90566&amp;status=done&amp;style=none&amp;taskId=u8d085683-5c77-4c17-9762-888fd8dba64&amp;title=&amp;width=926" alt="image.png"></li></ul></li><li>大小100*100的jpg <ul><li><a href="https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.jpg" target="_blank" rel="noreferrer">https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.jpg</a></li><li><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639182496698-9a98d0e2-f474-4507-a7ab-23ff4c1964fb.png#clientId=u8d4423ab-33dd-4&amp;from=paste&amp;height=389&amp;id=ud0a8df29&amp;name=image.png&amp;originHeight=389&amp;originWidth=926&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=42074&amp;status=done&amp;style=none&amp;taskId=u59e37282-3ac1-4e47-b96e-9012b6c98c3&amp;title=&amp;width=926" alt="image.png"></li></ul></li><li>webp格式图片 <ul><li><a href="https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.webp" target="_blank" rel="noreferrer">https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.webp</a></li><li><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639182566592-6e33a834-d94f-4b10-a95b-af4e14ceb891.png#clientId=u8d4423ab-33dd-4&amp;from=paste&amp;height=389&amp;id=u2ea0b627&amp;name=image.png&amp;originHeight=389&amp;originWidth=926&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=87327&amp;status=done&amp;style=none&amp;taskId=u694ef039-9803-4739-bfd8-287d6fc3105&amp;title=&amp;width=926" alt="image.png"></li></ul></li><li>压缩质量至10% <ul><li><a href="https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.jpg!q10" target="_blank" rel="noreferrer">https://img13.360buyimg.com/n1/s450x450_jfs/t1/209215/36/919/118140/614417e2E0ca973cc/ac392b678b4fbd61.jpg!q10</a></li><li><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639182629684-5b571b58-d3dd-4277-a1ee-0ba0592a5566.png#clientId=u8d4423ab-33dd-4&amp;from=paste&amp;height=389&amp;id=u2bbd512b&amp;name=image.png&amp;originHeight=389&amp;originWidth=926&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=59256&amp;status=done&amp;style=none&amp;taskId=u71a86a55-3515-4364-86eb-39cff09a195&amp;title=&amp;width=926" alt="image.png"></li></ul></li></ul><h2 id="html优化细则" tabindex="-1">HTML优化细则 <a class="header-anchor" href="#html优化细则" aria-hidden="true">#</a></h2><h3 id="精简html代码" tabindex="-1">精简HTML代码 <a class="header-anchor" href="#精简html代码" aria-hidden="true">#</a></h3><ul><li>减少HTML嵌套</li><li>减少DOM节点数</li><li>减少无语义代码（如：清除浮动<code>&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</code>）</li><li>删除http或者https，如果URL的协议头和当前页面的协议头一致，或者此URL在多个协议头中都是可用的，则考虑删除协议头（如：<code>&lt;img src=&quot;/assets/img.png&quot;&gt;</code>）</li><li>删除多余的空格、换行符、缩进和不必要的注释</li><li>省略冗余标签和属性</li><li>使用相对URL</li></ul><h3 id="文件放在合适位置" tabindex="-1">文件放在合适位置 <a class="header-anchor" href="#文件放在合适位置" aria-hidden="true">#</a></h3><ul><li>CSS样式文件链接尽量放在页面头部</li><li>CSS加载不会阻塞DOM Tree解析，但会阻塞其渲染，也会阻塞后面JS执行。 <ul><li>任何body元素之前，可以确保在文档部分中解析了所有的CSS样式（内联和外联），从而减少了浏览器必须重排文档的次数。</li><li>如果放置在页面底部，就要等待最后一个CSS文件下载完成，此时会出现“白屏”，影响用户体验。</li></ul></li><li>JS引用放在HTML底部，防止JS的加载、解析、执行阻塞页面后续元素的正常渲染</li></ul><h3 id="增强用户体验" tabindex="-1">增强用户体验 <a class="header-anchor" href="#增强用户体验" aria-hidden="true">#</a></h3><ul><li>设置favicon.ico <ul><li>网站如果不设置favicon.ico，控制台报错，页面加载过程中也没有图标loading过程，同时也不利于记忆网站品牌，建议统一添加。</li></ul></li><li>增加首屏必要的CSS和JS <ul><li>页面如果需要等待依赖的JS和CSS加载完成才显示，则在渲染过程中页面会一直显示空白，影响用户体验，建议增加首屏必要的CSS和JS。如页面框架背景图或者loading图，内联在html中。这样可以加快首屏加载时间。</li></ul></li></ul><h2 id="css优化细则" tabindex="-1">CSS优化细则 <a class="header-anchor" href="#css优化细则" aria-hidden="true">#</a></h2><h3 id="提升css渲染性能" tabindex="-1">提升CSS渲染性能 <a class="header-anchor" href="#提升css渲染性能" aria-hidden="true">#</a></h3>`,49),p=l("ul",null,[l("li",null,[a("减少使用expensive属性 "),l("ul",null,[l("li",null,"如:nth-child伪类；position:fixed定位")])]),l("li",null,[a("减少样式层级 "),l("ul",null,[l("li",{"color:":"","red;":""},"如div ul li span i")])]),l("li",null,[a("避免使用占用过多CPU和内存的属性 "),l("ul",null,[l("li",null,"如text-indent: -999999px")])]),l("li",null,[a("尽量避免使用耗电量大的属性 "),l("ul",null,[l("li",null,"如CSS3 3D transforms、CSS3 transitions、opacity")])])],-1),r=e(`<h3 id="合理使用css选择器" tabindex="-1">合理使用CSS选择器 <a class="header-anchor" href="#合理使用css选择器" aria-hidden="true">#</a></h3><ul><li>尽量避免使用CSS表达式 <ul><li>background-color: expression((new Date().getHours() % 2 ? &quot;#FFF&quot; : &quot;#000&quot;))</li></ul></li><li>尽量避免使用通配选择器 <ul><li>如<code>body &gt; a {color: red;}</code></li></ul></li><li>尽量避免类正则的属性选择器 <ul><li>*=、|=、^=、$=</li></ul></li></ul><h3 id="提升css文件加载性能" tabindex="-1">提升CSS文件加载性能 <a class="header-anchor" href="#提升css文件加载性能" aria-hidden="true">#</a></h3><ul><li>使用外链的CSS</li><li>尽量避免使用@import</li></ul><h3 id="精简css代码" tabindex="-1">精简CSS代码 <a class="header-anchor" href="#精简css代码" aria-hidden="true">#</a></h3><ul><li>使用缩写语句</li><li>删除不必要的零</li><li>删除不必要的单位</li><li>删除过多的分号</li><li>删除空格和注释</li><li>尽量减少样式表的大小</li></ul><h3 id="合理使用web-fonts" tabindex="-1">合理使用Web Fonts <a class="header-anchor" href="#合理使用web-fonts" aria-hidden="true">#</a></h3><ul><li>将字体部署在CDN上</li><li>将字体以base64形式保存在CSS中并通过localStorage进行缓存</li></ul><h3 id="css动画优化" tabindex="-1">CSS动画优化 <a class="header-anchor" href="#css动画优化" aria-hidden="true">#</a></h3><ul><li>尽量避免同时动画</li><li>延迟动画初始化</li><li>结合SVG</li></ul><h2 id="js优化细则" tabindex="-1">JS优化细则 <a class="header-anchor" href="#js优化细则" aria-hidden="true">#</a></h2><h3 id="js变量和函数优化" tabindex="-1">JS变量和函数优化 <a class="header-anchor" href="#js变量和函数优化" aria-hidden="true">#</a></h3><ul><li>尽量使用id选择器</li><li>尽量避免使用eval</li><li>函数尽可能保持简洁</li><li>使用节流函数</li><li>使用事件委托</li></ul><h3 id="js动画优化" tabindex="-1">JS动画优化 <a class="header-anchor" href="#js动画优化" aria-hidden="true">#</a></h3><ul><li>避免添加大量动画</li><li>尽量避免使用CSS3动画</li><li>尽量使用Canvas动画</li><li>合理使用requestAnimationFrame动画代替setTimeout和setInterval <ul><li>requestAnimationFrame可以在正确的时间进行渲染，setTimeout和setInterval无法保证callback的执行时机</li></ul></li></ul><h3 id="合理使用缓存" tabindex="-1">合理使用缓存 <a class="header-anchor" href="#合理使用缓存" aria-hidden="true">#</a></h3><ul><li>合理缓存DOM对象</li><li>缓存列表长度</li><li>使用可缓存的AJAX</li></ul><h2 id="js缓存优化" tabindex="-1">JS缓存优化 <a class="header-anchor" href="#js缓存优化" aria-hidden="true">#</a></h2><h3 id="cookie" tabindex="-1">Cookie <a class="header-anchor" href="#cookie" aria-hidden="true">#</a></h3><ul><li>通常有浏览器存储，然后将cookie与每个后续请求一起发送到服务器，服务器接收到请求时可以对cookie进行处理，设置有效时间，然后随响应返回给客户端。</li></ul><h3 id="sessionstorage" tabindex="-1">SessionStorage <a class="header-anchor" href="#sessionstorage" aria-hidden="true">#</a></h3><ul><li>创建一个本地存储（键值对）</li><li>应用于页面间传值</li></ul><h3 id="localstorage" tabindex="-1">LocalStorage <a class="header-anchor" href="#localstorage" aria-hidden="true">#</a></h3><ul><li>创建一个本地存储（键值对）</li><li>应用于 <ul><li>缓存静态文件JS/CSS等</li><li>缓存不常变更的API接口数据</li><li>存储地理位置信息等</li><li>缓存浏览器页面具体位置</li></ul></li></ul><p><strong>IndexDB</strong></p><ul><li>索引数据库</li><li>应用于 <ul><li>客户端存储大量结构化数据</li><li>没有网络连接情况下使用</li><li>存储冗余、很少修改但经常访问的数据，减少访问服务器</li></ul></li></ul><h2 id="js模块化加载方案和选型" tabindex="-1">JS模块化加载方案和选型 <a class="header-anchor" href="#js模块化加载方案和选型" aria-hidden="true">#</a></h2><h3 id="commonjs" tabindex="-1">CommonJS <a class="header-anchor" href="#commonjs" aria-hidden="true">#</a></h3><ul><li>Node.js模块化方案</li></ul><h3 id="amd-asynchronous-module-definition-规范" tabindex="-1">AMD（Asynchronous Module Definition）规范 <a class="header-anchor" href="#amd-asynchronous-module-definition-规范" aria-hidden="true">#</a></h3><ul><li>RequireJS模块化加载器</li></ul><h3 id="cmd-commonmodule-definition-规范" tabindex="-1">CMD（CommonModule Definition）规范 <a class="header-anchor" href="#cmd-commonmodule-definition-规范" aria-hidden="true">#</a></h3><ul><li>SeaJS模块化加载器</li></ul><h3 id="es6-import" tabindex="-1">ES6 import <a class="header-anchor" href="#es6-import" aria-hidden="true">#</a></h3><ul><li>es6引入的模块化方案</li></ul><h2 id="减少回流和重绘重要举措" tabindex="-1">减少回流和重绘重要举措 <a class="header-anchor" href="#减少回流和重绘重要举措" aria-hidden="true">#</a></h2><h3 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-hidden="true">#</a></h3><ul><li>避免过多样式嵌套</li><li>避免使用CSS表达式</li><li>使用觉得定位，可以让动画元素脱离文档流</li><li>避免使用table布局</li><li>尽量不使用float布局</li><li>图片最好设置好width和height</li><li>尽量简化浏览器不必要的任务，减少页面重新布局</li><li>使用viewport设置屏幕缩放级别</li><li>避免频繁设置样式，最好把新的style属性设置完成后，一次性更改</li><li>避免使用引起回流/重绘的属性，最好把相关变量缓存起来</li></ul><h3 id="js" tabindex="-1">JS <a class="header-anchor" href="#js" aria-hidden="true">#</a></h3><ul><li>最小化回流和重排 <ul><li>为了减少回流发生次数，避免频繁或操作DOM，可以合并多次对DOM修改，然后一次性批量处理。</li></ul></li><li>控制绘制过程和绘制区域 <ul><li>尽量避免使用绘制过程开销比较大的属性</li><li>减少绘制区域范围</li></ul></li></ul><h2 id="dom编程优化的" tabindex="-1">DOM编程优化的 <a class="header-anchor" href="#dom编程优化的" aria-hidden="true">#</a></h2><h3 id="控制dom的大小" tabindex="-1">控制DOM的大小 <a class="header-anchor" href="#控制dom的大小" aria-hidden="true">#</a></h3><ul><li>如果页面中DOM节点过多，则查找节点非常耗时，应减少DOM节点。</li><li>元素绑定事件，事件冒泡和事件捕获也会相对比较耗时。</li></ul><h3 id="简化dom操作" tabindex="-1">简化DOM操作 <a class="header-anchor" href="#简化dom操作" aria-hidden="true">#</a></h3><ul><li>对DOM节点的操作统一处理后，再统一插入到DOM Tree中</li><li>可以使用fragment，尽量不在页面DOM Tree里直接操作</li><li>使用虚拟DOM技术，通过diff算法简化和减少DOM操作</li></ul><h2 id="静态文件压缩工具" tabindex="-1">静态文件压缩工具 <a class="header-anchor" href="#静态文件压缩工具" aria-hidden="true">#</a></h2><h3 id="html压缩工具" tabindex="-1">HTML压缩工具 <a class="header-anchor" href="#html压缩工具" aria-hidden="true">#</a></h3><ul><li>html-minifier</li></ul><h3 id="css压缩工具" tabindex="-1">CSS压缩工具 <a class="header-anchor" href="#css压缩工具" aria-hidden="true">#</a></h3><ul><li>clean-css</li></ul><h3 id="js压缩工具" tabindex="-1">JS压缩工具 <a class="header-anchor" href="#js压缩工具" aria-hidden="true">#</a></h3><ul><li>uglify-js</li></ul><h2 id="静态文件打包方案" tabindex="-1">静态文件打包方案 <a class="header-anchor" href="#静态文件打包方案" aria-hidden="true">#</a></h2><ul><li>公共组件拆分</li><li>压缩JS/CSS/图片</li><li>合并JS/CSS文件，CSS sprite</li></ul><h2 id="静态文件版本号更新策略" tabindex="-1">静态文件版本号更新策略 <a class="header-anchor" href="#静态文件版本号更新策略" aria-hidden="true">#</a></h2><ul><li>缓存更新 <ul><li>CDN刷新文件路径，更新文件header头</li></ul></li><li>文件name.v1-v100.js <ul><li>大功能迭代每次新增一个大版本，比如由v1到v2</li><li>小功能迭代新增加0.0.1或者0.1.0</li></ul></li><li>时间戳.文件name.js <ul><li>以每次上线时间点做差异</li></ul></li><li>文件hash.name.js <ul><li>以文件内容hash值做key</li></ul></li></ul><h2 id="前端构建工具选型" tabindex="-1">前端构建工具选型 <a class="header-anchor" href="#前端构建工具选型" aria-hidden="true">#</a></h2><ul><li>Grunt <ul><li>最早，一个项目需定制多个小任务和引用多个插件</li></ul></li><li>Gulp <ul><li>通过流stream来简化多个任务间的配置和输出，配置相对简单</li></ul></li><li>webpack <ul><li>预编译，中间文件在内存处理，支持多种模块化，配置较简单</li></ul></li></ul><h2 id="webpack打包优化" tabindex="-1">webpack打包优化 <a class="header-anchor" href="#webpack打包优化" aria-hidden="true">#</a></h2><ul><li>定位体积大的模块</li><li>删除没有使用的依赖</li><li>生产模式进行公共包抽离</li><li>开发模式进行DLL方式优化</li></ul><h1 id="页面渲染架构设计和性能优化" tabindex="-1">页面渲染架构设计和性能优化 <a class="header-anchor" href="#页面渲染架构设计和性能优化" aria-hidden="true">#</a></h1><h2 id="浏览器渲染过程" tabindex="-1">浏览器渲染过程 <a class="header-anchor" href="#浏览器渲染过程" aria-hidden="true">#</a></h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639268682596-95506769-cb75-45a4-a9c9-931f16195f0f.png#clientId=u73cf0159-4d21-4&amp;from=paste&amp;height=202&amp;id=ub70851ca&amp;name=image.png&amp;originHeight=202&amp;originWidth=585&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=106267&amp;status=done&amp;style=none&amp;taskId=u13c566da-97d0-4653-a973-8ded4d83dce&amp;title=&amp;width=585" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/jpeg/743297/1639270260077-a1f69541-196b-4ae2-843c-33b04c8c1d0c.jpeg" alt=""></p><ol><li>浏览器解析HTML，生成DOM Tree</li><li>浏览器解析CSS，生成CSSOM Tree</li><li>JavaScript通过DOM API和CSSOM API来操作DOM Tree和CSS Rule Tree，浏览器将DOM Tree和CSSOM Tree合成渲染树Render Tree</li><li>布局（Layout）：根据生成的Render Tree，进行回流，计算每个节点的几何信息（位置，大小，字体样式等）</li><li>绘制（Painting）：根据渲染树和回流得到的几何信息，得到每个节点的绝对像素</li><li>展示（Display）：将像素发送给图形处理器，展示在页面上</li></ol><h2 id="页面渲染技术架构和方案总览" tabindex="-1">页面渲染技术架构和方案总览 <a class="header-anchor" href="#页面渲染技术架构和方案总览" aria-hidden="true">#</a></h2><h3 id="服务端渲染" tabindex="-1">服务端渲染 <a class="header-anchor" href="#服务端渲染" aria-hidden="true">#</a></h3><ul><li>后端同步渲染、同构直出</li></ul><h3 id="客户端渲染" tabindex="-1">客户端渲染 <a class="header-anchor" href="#客户端渲染" aria-hidden="true">#</a></h3><ul><li>JavaScript渲染：静态化、前后端分离、单页面应用</li><li>Web App：React、Vue、Angular等，PWA</li><li>原生APP：iOS、Android</li><li>Hybrid APP：PhoneGap、AppCan等</li><li>跨平台开发：React Native、Flutter、小程序等</li></ul><h2 id="单页面技术" tabindex="-1">单页面技术 <a class="header-anchor" href="#单页面技术" aria-hidden="true">#</a></h2><p><strong>定义</strong> 当当页面应用（Single Page Application），通过动态重写当前页面来与用户交互，而非传统意义上的从服务器重新加载整个新页面，这种方法在使用过程中不需要重新加载页面，避免了页面直接切换打断用户体验，使应用程序更新一个桌面应用程序。</p><p><strong>优点</strong></p><ul><li>加载速度快，进入页面即可看到元素</li><li>用户体验好，进行局部渲染，避免不必要的页面跳转和重复渲染</li><li>前后端职责分离，前端负责页面交互逻辑，后端负责业务逻辑</li><li>减轻服务器负载，服务器只处理接口数据输出，不用考虑模板渲染和HTML展示</li></ul><p><strong>缺点</strong></p><ul><li>开发成本相对较高</li><li>首次页面加载时间过多</li><li>SEO难度大</li></ul><p><strong>框架</strong></p><ul><li>React</li><li>Vue</li><li>Angular</li><li>...</li></ul><h2 id="同构直出技术" tabindex="-1">同构直出技术 <a class="header-anchor" href="#同构直出技术" aria-hidden="true">#</a></h2><p><strong>定义</strong> 一套代码既可以在服务端运行也可以在客户端运行</p><p><strong>优点</strong></p><ul><li>性能：降低首屏渲染时间</li><li>SEO：服务端渲染包括SEO的内容</li><li>兼容性：有效规避客户端兼容性问题，如白屏</li><li>代码同构：直接上线两个版本，利于灾备</li></ul><p><strong>技术实现</strong></p><ul><li>next.js服务器端渲染React组件</li><li>nuxt.js服务器端渲染Vue组件</li></ul><h2 id="pwa技术方案" tabindex="-1">PWA技术方案 <a class="header-anchor" href="#pwa技术方案" aria-hidden="true">#</a></h2><p><strong>定义</strong> Progressive Web App，简称PWA，PWA应用是使用特定技术和标准模式来开发的Web应用，这将同时赋予他们Web应用和原始应用的特性。</p><p><strong>优点</strong></p><ul><li>用户可以用手机屏幕启动应用，即时在离线或弱网情况下，通过事先缓存的资源，也可正常加载运行，可以完全消除网络依赖，给用户更好的体验。</li><li>预先缓存资源，秒开网页</li><li>和原生应用一样有沉浸式的用户体验</li><li>内容可以被收录</li><li>可推送离线消息给用户</li></ul><p><strong>技术实现</strong></p><ul><li>使用HTTPS协议，需使用Service Worker</li><li>使用Service Worker技术提升性能，离线提供静态资源文件，提升首屏用户体验</li><li>使用APP Manifest</li><li>最后可以考虑消息推送</li></ul><p><strong>浏览器兼容性</strong></p><ul><li>ServiceWorkerGlobalScope API 88%</li><li>Web App Manifest 83%</li></ul><h2 id="页面加载策略优化" tabindex="-1">页面加载策略优化 <a class="header-anchor" href="#页面加载策略优化" aria-hidden="true">#</a></h2><h3 id="懒加载" tabindex="-1">懒加载 <a class="header-anchor" href="#懒加载" aria-hidden="true">#</a></h3><p><strong>定义</strong> 懒加载也叫延迟加载，指的是长网页中延迟加载特定元素，如图片，JS/CSS文件等</p><p><strong>优点</strong></p><ul><li>可以减少当前屏无效资源加载</li></ul><p><strong>实现方式</strong></p><ul><li>把懒加载元素src属性设置为空字符串，把真实的src属性写在data-lazy属性中，当页面滚动时监听scroll事件，如果懒加载元素在可视区域内，就把图片的src属性设置成data-lazy属性值。</li></ul><h3 id="预加载" tabindex="-1">预加载 <a class="header-anchor" href="#预加载" aria-hidden="true">#</a></h3><p><strong>定义</strong> 预加载某些将来需用到的资源到本地，后面只需从缓存中获取。</p><p><strong>优点</strong></p><ul><li>减少后续加载等待时间</li></ul><p><strong>实现方式</strong></p><ul><li>HTML标签 <ul><li><code>&lt;img src=&quot;xxx.jpg&quot; style=&quot;display:none&quot; /&gt;</code></li></ul></li><li>使用Image对象 <ul><li>let img = new Image();</li><li>img.src = &quot;xxx.jpg&quot;;</li></ul></li><li>使用preload，prefetch，dns-prefetch，preconnect <ul><li><code>&lt;link rel=&quot;preload&quot; href=&quot;src/style.css&quot; /&gt;</code></li><li><code>&lt;link rel=&quot;prefetch&quot; href=&quot;src/img.jpg&quot; /&gt;</code></li><li><code>&lt;link rel=&quot;dns-prefetch&quot; href=&quot;http://xxx.com&quot; /&gt;</code></li><li><code>&lt;link rel=&quot;preconnect&quot; href=&quot;http://xxx.com&quot; crossorigin /&gt;</code></li></ul></li></ul><h3 id="预渲染" tabindex="-1">预渲染 <a class="header-anchor" href="#预渲染" aria-hidden="true">#</a></h3><p><strong>优点</strong></p><ul><li>对于大型项目，在懒加载组件被加载之前，组件肯还会有其他懒加载组件的代码或数据，所以用户还是需要时间等待组件加载完成。</li><li>提前渲染组件，不展示在页面中，需要时再显示。</li></ul><p><strong>实现方式</strong></p><ul><li><code>&lt;link rel=&quot;prerender&quot; href=&quot;http://xxx.com&quot; /&gt;</code></li></ul><h3 id="按需加载" tabindex="-1">按需加载 <a class="header-anchor" href="#按需加载" aria-hidden="true">#</a></h3><ul><li>React异步载入</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> componentA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">location</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">callback</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">require</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ensure</span><span style="color:#F07178;">([]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">require</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">callback</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">null,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">modules/componentA</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">componentA</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> componentB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">location</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">callback</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">require</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ensure</span><span style="color:#F07178;">([]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">require</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">callback</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">null,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">modules/componentB</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">componentB</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Router</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">history</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">}&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Route</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">component</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">App</span><span style="color:#89DDFF;">}&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Route</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentA</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">getComponent</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">componentA</span><span style="color:#89DDFF;">}&gt;&lt;/</span><span style="color:#FFCB6B;">Route</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Route</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">componentB</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">getComponent</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">componentB</span><span style="color:#89DDFF;">}&gt;&lt;/</span><span style="color:#FFCB6B;">Route</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Route</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Router</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>Vue异步载入</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> componentA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/a.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resolve)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> componentB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/b.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resolve)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> router </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">VueRouter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">routes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> / a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> componentA</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  	</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> / b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> componentB</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="楼层式加载" tabindex="-1">楼层式加载 <a class="header-anchor" href="#楼层式加载" aria-hidden="true">#</a></h3><p>楼层数据异步加载和本地缓存相结合的方式</p><h2 id="接口服务调用优化" tabindex="-1">接口服务调用优化 <a class="header-anchor" href="#接口服务调用优化" aria-hidden="true">#</a></h2><ul><li>接口合并</li><li>接口上CDN</li><li>接口域名上CDN</li><li>接口降级</li><li>接口监控</li></ul><h2 id="接口缓存策略优化" tabindex="-1">接口缓存策略优化 <a class="header-anchor" href="#接口缓存策略优化" aria-hidden="true">#</a></h2><ul><li>AJAX/fetch缓存</li><li>本地缓存</li><li>多次请求</li></ul><h1 id="混合开发" tabindex="-1">混合开发 <a class="header-anchor" href="#混合开发" aria-hidden="true">#</a></h1><h2 id="react-native内核及优势" tabindex="-1">React Native内核及优势 <a class="header-anchor" href="#react-native内核及优势" aria-hidden="true">#</a></h2><h3 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-hidden="true">#</a></h3><ul><li>一套代码，运行在ios和android端</li><li>性能几乎与Native相同</li><li>动画流畅，在渲染前代码转换为原生视图</li><li>支持热更新，不用每次发版都发布到应用商店</li></ul><h3 id="底层原理" tabindex="-1">底层原理 <a class="header-anchor" href="#底层原理" aria-hidden="true">#</a></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639274327419-c38a114e-ccf3-4f69-8c26-947c8edf37da.png#clientId=u73cf0159-4d21-4&amp;from=paste&amp;height=320&amp;id=u2f9d176a&amp;name=image.png&amp;originHeight=320&amp;originWidth=840&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=28794&amp;status=done&amp;style=none&amp;taskId=u09040baa-72bd-4ec6-b911-d1d638f662b&amp;title=&amp;width=840" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639274352650-56673e20-7adf-4db0-a853-87f4b79b8116.png#clientId=u73cf0159-4d21-4&amp;from=paste&amp;height=329&amp;id=u3c02d784&amp;name=image.png&amp;originHeight=329&amp;originWidth=757&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=21033&amp;status=done&amp;style=none&amp;taskId=u1b188b6a-01a5-4693-a30a-a2bc70f5852&amp;title=&amp;width=757" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/jpeg/743297/1639274709517-f151a6eb-f2d7-4e49-9e35-057e881c4eb4.jpeg" alt=""></p><h2 id="小程序内核及优势" tabindex="-1">小程序内核及优势 <a class="header-anchor" href="#小程序内核及优势" aria-hidden="true">#</a></h2><h3 id="优点-1" tabindex="-1">优点 <a class="header-anchor" href="#优点-1" aria-hidden="true">#</a></h3><ul><li>使用web技术开发，开发门槛低</li><li>性能优于H5，接近Native体验</li><li>可使用APP原生能力</li><li>支持热更新</li></ul><h3 id="底层原理-1" tabindex="-1">底层原理 <a class="header-anchor" href="#底层原理-1" aria-hidden="true">#</a></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639275034224-13a181d5-1b45-43a6-ba98-0b2e6fcaf322.png#clientId=u73cf0159-4d21-4&amp;from=paste&amp;height=358&amp;id=u2963ee21&amp;name=image.png&amp;originHeight=358&amp;originWidth=839&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=46076&amp;status=done&amp;style=none&amp;taskId=ue784f439-4f6b-40ff-b490-765469d04d0&amp;title=&amp;width=839" alt="image.png"></p><h2 id="flutter内核及优势" tabindex="-1">Flutter内核及优势 <a class="header-anchor" href="#flutter内核及优势" aria-hidden="true">#</a></h2><h3 id="优点-2" tabindex="-1">优点 <a class="header-anchor" href="#优点-2" aria-hidden="true">#</a></h3><ul><li>编写一次代码，部署各终端</li><li>底层使用Skia图像引擎，图形性能媲美原生应用</li><li>界面像一款全屏应用程序或2D游戏</li><li>速度快，提前编译，不需要JVM</li></ul><h3 id="底层原理-2" tabindex="-1">底层原理 <a class="header-anchor" href="#底层原理-2" aria-hidden="true">#</a></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639275271144-a3917afa-57f9-4809-9fb6-76d9436352f9.png#clientId=u73cf0159-4d21-4&amp;from=paste&amp;height=415&amp;id=uf022b8c9&amp;name=image.png&amp;originHeight=415&amp;originWidth=820&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=31900&amp;status=done&amp;style=none&amp;taskId=u549f101a-57b1-4c98-bb83-c7bb461f9c9&amp;title=&amp;width=820" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639275303078-cf2678ec-efe5-4002-b339-75ad01e8c1d5.png#clientId=u73cf0159-4d21-4&amp;from=paste&amp;height=332&amp;id=u10fab1bb&amp;name=image.png&amp;originHeight=332&amp;originWidth=817&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=53657&amp;status=done&amp;style=none&amp;taskId=ub7e5c23e-691f-47c0-b003-46218bda7da&amp;title=&amp;width=817" alt="image.png"></p><h1 id="服务端和网络优化" tabindex="-1">服务端和网络优化 <a class="header-anchor" href="#服务端和网络优化" aria-hidden="true">#</a></h1><h2 id="合理配置cdn缓存" tabindex="-1">合理配置CDN缓存 <a class="header-anchor" href="#合理配置cdn缓存" aria-hidden="true">#</a></h2><h3 id="cdn定义" tabindex="-1">CDN定义 <a class="header-anchor" href="#cdn定义" aria-hidden="true">#</a></h3><p>内容分发网络（Content Delivery Network，简称CDN）是利用靠近每一位用户的服务器，更快、更可靠地将文件发送给用户分发网络。</p><h3 id="cdn优点" tabindex="-1">CDN优点 <a class="header-anchor" href="#cdn优点" aria-hidden="true">#</a></h3><ul><li>提速：给用户纸牌较近、较顺畅的服务器节点，将数据传输给用户</li><li>低成本：服务器被放到不同地点，减少了互连的流量，也降低了带宽成本</li><li>高可用：当某个服务器故障时，自动调用邻近地区的服务器</li></ul><h3 id="cdn回源" tabindex="-1">CDN回源 <a class="header-anchor" href="#cdn回源" aria-hidden="true">#</a></h3><p>回源是指浏览器访问CDN集群上静态文件时，文件缓存过期，直接穿透CDN集群而访问源站机器的行为。</p><h3 id="cdn缓存" tabindex="-1">CDN缓存 <a class="header-anchor" href="#cdn缓存" aria-hidden="true">#</a></h3><ul><li>三级缓存：浏览器本地缓存、CDN边缘节点缓存、CDN源站缓存</li><li>缓存设置：缓存时间过短，CDN边缘节点经常失效，导致频繁回源，增大源站负载；缓存时间过长，文件更新慢，用户本地缓存不能及时更新，需结合业务视情况而定。</li><li>不同静态资源类型缓存时间 <ul><li>HTML：3分钟</li><li>JS、CSS：10分钟、1天、30天</li></ul></li></ul><h3 id="cdn缓存设置" tabindex="-1">CDN缓存设置 <a class="header-anchor" href="#cdn缓存设置" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">http</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">server</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">listen</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">server_name</span><span style="color:#F07178;"> 123</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">location</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">~*</span><span style="color:#F07178;"> \\</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">jpg</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">jpeg</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">gif</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">bmp</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">png</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">expires</span><span style="color:#F07178;"> 30</span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="cdn灰度发布" tabindex="-1">CDN灰度发布 <a class="header-anchor" href="#cdn灰度发布" aria-hidden="true">#</a></h3><ul><li>原理：在部分地区、部分地区的运营商优先发布静态资源，验证通过后，再进行全量发布。</li></ul><h2 id="减少http请求数" tabindex="-1">减少HTTP请求数 <a class="header-anchor" href="#减少http请求数" aria-hidden="true">#</a></h2><ul><li>CSS Sprites</li><li>图片使用DataURI、Web Font</li><li>JS/CSS文件合并</li><li>JS/CSS请求Combo</li><li>接口合并</li><li>接口存储LocalStorage</li><li>静态资源存储LocalStorage</li></ul><h2 id="减少cookie的策略和益处" tabindex="-1">减少cookie的策略和益处 <a class="header-anchor" href="#减少cookie的策略和益处" aria-hidden="true">#</a></h2><p><strong>策略</strong></p><ul><li>主站首页设置白名单</li><li>定期删除非白名单cookie</li></ul><p><strong>好处</strong></p><ul><li>减少页面传输大小</li><li>对cookie进行有效管理</li></ul><h2 id="服务端缓存配置和优化" tabindex="-1">服务端缓存配置和优化 <a class="header-anchor" href="#服务端缓存配置和优化" aria-hidden="true">#</a></h2><h3 id="expires" tabindex="-1">Expires <a class="header-anchor" href="#expires" aria-hidden="true">#</a></h3><p><strong>定义</strong></p><ul><li>响应头包含日期/时间，在此时间之后，响应过期</li><li>无效的日期，比如0，,代表过去的时间，即该资源已过期</li><li>如果Cache-Control响应头设置了“max-age”或者“s-max-age”指令，那么expires头会被忽略</li></ul><p><strong>语法</strong> Expires: Sun, 05 Jun 2022 13:03:21 GMT <strong>实例</strong> Expires: Sun, 05 Jun 2022 13:03:21 GMT <img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639313799890-1cedd1fe-2cae-4edb-a1de-ff5e10b7f005.png#clientId=uaf1b4862-cdaf-4&amp;from=paste&amp;height=271&amp;id=u08411d69&amp;name=image.png&amp;originHeight=271&amp;originWidth=427&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=15370&amp;status=done&amp;style=none&amp;taskId=uf5017d42-ebcb-47e5-8394-979fc8c1ffc&amp;title=&amp;width=427" alt="image.png"></p><h3 id="cache-control" tabindex="-1">Cache-Control <a class="header-anchor" href="#cache-control" aria-hidden="true">#</a></h3><p><strong>定义</strong> 通用消息投字段，通过指定指令来实现缓存机制，缓存指令是单向的，这意味着在请求中设置的指令，不一定被包含在响应中。</p><p><strong>语法</strong> Cache-Control: max-age=<code>&lt;seconds&gt;</code> 设置缓存存储的最大周期，超过这个时间缓存被认为过期，与Expires相反，时间是相对于请求的时间。</p><p><strong>实例</strong> Cache-Control: max-age=15552000 <img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639314124025-725734eb-74f6-4d25-acdf-066afb04cffe.png#clientId=uaf1b4862-cdaf-4&amp;from=paste&amp;height=99&amp;id=u68cba7ba&amp;name=image.png&amp;originHeight=99&amp;originWidth=334&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=4722&amp;status=done&amp;style=none&amp;taskId=uab9d1621-7583-4963-a97e-e33d788d4a2&amp;title=&amp;width=334" alt="image.png"></p><h3 id="etag" tabindex="-1">ETag <a class="header-anchor" href="#etag" aria-hidden="true">#</a></h3><p><strong>定义</strong></p><ul><li>ETag是HTTP响应头资源特定版本的标识符，这可以让缓存更高效，节省带宽，如果内容没有更改，服务端不需要发送完整的响应；如果内容发生了变化，使用ETag有助于防止资源同时更新相互覆盖。</li><li>如果资源更改，则一定要生成新的ETag值。Etag类似于资源指纹，通过比较ETag值快速确认资源是否发生变化。</li></ul><p><strong>语法</strong> ETag: <code>&quot;&lt;etag_value&gt;&quot;</code><strong>实例</strong> ETag: W/&quot;807eab895c28c41a69e50b66580f4569&quot; <img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639315558947-788b759c-35ea-49bb-89b3-180baab0ed5c.png#clientId=uaf1b4862-cdaf-4&amp;from=paste&amp;height=174&amp;id=u56aa2c70&amp;name=image.png&amp;originHeight=174&amp;originWidth=396&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=11013&amp;status=done&amp;style=none&amp;taskId=ua4c3b439-e761-4841-97b5-3f8a21e3f52&amp;title=&amp;width=396" alt="image.png"></p><h3 id="last-modified" tabindex="-1">Last-Modified <a class="header-anchor" href="#last-modified" aria-hidden="true">#</a></h3><p><strong>定义</strong></p><ul><li>Last-Modified是一个响应头部，其中包含源头服务器认定的资源做出修改的日期及时间。</li><li>精确度比Etag低。</li><li>包含有If-Modified-Since或If-Unmodified-Since收不的条件请求会使用这个字段</li></ul><p><strong>语法</strong> Last-Modified: <code>&lt;date&gt;</code><strong>实例</strong> last-modified: Wed, 12 Sep 2018 06:06:26 GMT <img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639315959684-28ce31f0-0dfc-4eac-a377-2ae91a3fe5a0.png#clientId=uaf1b4862-cdaf-4&amp;from=paste&amp;height=245&amp;id=u9d9ccd61&amp;name=image.png&amp;originHeight=245&amp;originWidth=469&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=14700&amp;status=done&amp;style=none&amp;taskId=u7eb9d8ac-7a8d-4b09-bb9f-42ea2cb3a54&amp;title=&amp;width=469" alt="image.png"></p><h3 id="date" tabindex="-1">Date <a class="header-anchor" href="#date" aria-hidden="true">#</a></h3><p><strong>定义</strong> Date是一个通用首部，其中包含了报文创建的日期和时间 <strong>语法</strong> date: Sun, 12 Dec 2021 12:54:02 GMT <strong>实例</strong> date: Sun, 12 Dec 2021 12:54:02 GMT <img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639322690421-63abc272-5343-44f5-84da-22575b5390c3.png#clientId=uaf1b4862-cdaf-4&amp;from=paste&amp;height=192&amp;id=u604619b8&amp;name=image.png&amp;originHeight=192&amp;originWidth=403&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=10663&amp;status=done&amp;style=none&amp;taskId=u5606037d-25e9-40e3-ae34-9d20653990f&amp;title=&amp;width=403" alt="image.png"></p><h2 id="服务端开启gzip压缩" tabindex="-1">服务端开启gzip压缩 <a class="header-anchor" href="#服务端开启gzip压缩" aria-hidden="true">#</a></h2><h3 id="优点-3" tabindex="-1">优点 <a class="header-anchor" href="#优点-3" aria-hidden="true">#</a></h3><ul><li>对文本进行压缩（HTML/CSS/JS）</li><li>对非文本不压缩（jpg/gif/png/...）</li><li>压缩比约50%-70%</li></ul><h3 id="配置方法" tabindex="-1">配置方法 <a class="header-anchor" href="#配置方法" aria-hidden="true">#</a></h3><ul><li>Nginx配置：nginx.conf文件增加gzip on</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">http </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">server</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">gzip</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>响应头有Content-Encoding: gzip，代表服务端已开启gzip</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1639323233484-68daab09-e3ac-42bc-8453-d0db1d5497ca.png#clientId=uaf1b4862-cdaf-4&amp;from=paste&amp;height=125&amp;id=u207c0a78&amp;name=image.png&amp;originHeight=125&amp;originWidth=319&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=5742&amp;status=done&amp;style=none&amp;taskId=uec12ec48-3754-4876-ad13-b8bfb9c0da2&amp;title=&amp;width=319" alt="image.png"></p><h2 id="网站开启https" tabindex="-1">网站开启HTTPS <a class="header-anchor" href="#网站开启https" aria-hidden="true">#</a></h2><h3 id="概念-1" tabindex="-1">概念 <a class="header-anchor" href="#概念-1" aria-hidden="true">#</a></h3><ul><li>安全版的HTTP</li><li>基于SSL/TLS进行数据加密</li><li>主要目的是提供对服务器身份认证，保护数据隐私和完整性</li></ul><h3 id="工作原理" tabindex="-1">工作原理 <a class="header-anchor" href="#工作原理" aria-hidden="true">#</a></h3><ol><li>浏览器发起HTTPS请求</li><li>传输证书</li><li>浏览器解析证书</li><li>传送加密信息</li><li>服务器解密信息</li><li>服务器传输加密后的信息</li><li>浏览器解密信息</li></ol><h2 id="升级http2" tabindex="-1">升级HTTP2 <a class="header-anchor" href="#升级http2" aria-hidden="true">#</a></h2><p>HTTP2基于TLS的HTTP加密连接</p><h3 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-hidden="true">#</a></h3><ul><li>二进制传输数据</li><li>头部压缩，传输体积小</li><li>多路复用，允许通过一个HTTP2发起多个请求</li><li>服务端推送资源</li></ul><h3 id="优点-4" tabindex="-1">优点 <a class="header-anchor" href="#优点-4" aria-hidden="true">#</a></h3><ul><li>降低服务器压力</li><li>提升网站访问速度</li><li>保护网站安全</li></ul><h1 id="研发开发流程优化" tabindex="-1">研发开发流程优化 <a class="header-anchor" href="#研发开发流程优化" aria-hidden="true">#</a></h1><ol><li>前端研发流程优化</li><li>前端和后端协作模式</li><li>自动化测试方案</li><li>自动化上线</li><li>代码质量</li></ol><h1 id="全链路质量监控体系建设" tabindex="-1">全链路质量监控体系建设 <a class="header-anchor" href="#全链路质量监控体系建设" aria-hidden="true">#</a></h1><ol><li>上线前对HTML5的质量做即时检测</li><li>上线后进行HTML5性能和错误监控</li><li>线上业务基调监控</li><li>发版后进行APP的性能和错误监控</li></ol>`,199),c=[o,p,r];function d(h,u,g,m,y,D){return n(),i("div",null,c)}const C=s(t,[["render",d]]);export{f as __pageData,C as default};
