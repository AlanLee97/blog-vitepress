import{_ as s,o as n,c as a,b as l}from"./app.d2d47940.js";const C=JSON.parse('{"title":"Docker快速搭建Nginx流媒体服务器","description":"","frontmatter":{},"headers":[{"level":3,"title":"编写docker-compose.yml","slug":"编写docker-compose-yml","link":"#编写docker-compose-yml","children":[]},{"level":3,"title":"编写nginx.conf","slug":"编写nginx-conf","link":"#编写nginx-conf","children":[]},{"level":3,"title":"启动Nginx流媒体服务器","slug":"启动nginx流媒体服务器","link":"#启动nginx流媒体服务器","children":[]},{"level":3,"title":"检查启动状态","slug":"检查启动状态","link":"#检查启动状态","children":[]},{"level":3,"title":"打开设置","slug":"打开设置","link":"#打开设置","children":[]},{"level":3,"title":"在设置中添加推流地址","slug":"在设置中添加推流地址","link":"#在设置中添加推流地址","children":[]},{"level":3,"title":"添加媒体源","slug":"添加媒体源","link":"#添加媒体源","children":[]},{"level":3,"title":"开始推流","slug":"开始推流","link":"#开始推流","children":[]},{"level":3,"title":"设置拉流地址","slug":"设置拉流地址","link":"#设置拉流地址","children":[]},{"level":3,"title":"播放视频","slug":"播放视频","link":"#播放视频","children":[]},{"level":3,"title":"在设置中添加推流地址","slug":"在设置中添加推流地址-1","link":"#在设置中添加推流地址-1","children":[]},{"level":3,"title":"设置拉流地址","slug":"设置拉流地址-1","link":"#设置拉流地址-1","children":[]},{"level":3,"title":"播放视频","slug":"播放视频-1","link":"#播放视频-1","children":[]}],"relativePath":"knowledges/tech/other/media/Docker快速搭建Nginx流媒体服务器.md","lastUpdated":1678618356000}'),p={name:"knowledges/tech/other/media/Docker快速搭建Nginx流媒体服务器.md"},e=l(`<h1 id="docker快速搭建nginx流媒体服务器" tabindex="-1">Docker快速搭建Nginx流媒体服务器 <a class="header-anchor" href="#docker快速搭建nginx流媒体服务器" aria-hidden="true">#</a></h1><h1 id="准备软件" tabindex="-1">准备软件 <a class="header-anchor" href="#准备软件" aria-hidden="true">#</a></h1><p><strong>Linux</strong></p><ul><li>Docker</li><li>nginx-rtmp</li></ul><p><strong>Windows</strong></p><ul><li>OBS</li><li>PotPlayer</li></ul><p>docker的nginx-rtmp是封装了nginx-rtmp-module和ffmpeg的镜像</p><p><a href="https://hub.docker.com/r/alfg/nginx-rtmp" target="_blank" rel="noreferrer">https://hub.docker.com/r/alfg/nginx-rtmp</a></p><h1 id="搭建流媒体服务器" tabindex="-1">搭建流媒体服务器 <a class="header-anchor" href="#搭建流媒体服务器" aria-hidden="true">#</a></h1><hr><h3 id="编写docker-compose-yml" tabindex="-1">编写docker-compose.yml <a class="header-anchor" href="#编写docker-compose-yml" aria-hidden="true">#</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">3.1</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">nginx-rtmp-test</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">restart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">always</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">alfg/nginx-rtmp</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">container_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx-rtmp-test</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">1935:1935</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">8080:80</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./conf/nginx.conf:/etc/nginx/nginx.conf</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./html:/usr/share/nginx/html</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./log:/var/log/nginx</span></span>
<span class="line"></span></code></pre></div><h3 id="编写nginx-conf" tabindex="-1">编写nginx.conf <a class="header-anchor" href="#编写nginx-conf" aria-hidden="true">#</a></h3><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># user 指定运行 nginx 的用户和组（第一个参数为用户第二个为组，这里只有用户）</span></span>
<span class="line"><span style="color:#89DDFF;">user </span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 指定工作进程数（一般设置为CPU核数）</span></span>
<span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># nginx 连接配置模块</span></span>
<span class="line"><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 指定每个工作进程最大连接数为 1024</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> worker_connections </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#RTMP 服务（重点）</span></span>
<span class="line"><span style="color:#89DDFF;">rtmp</span><span style="color:#A6ACCD;"> {   </span></span>
<span class="line"><span style="color:#A6ACCD;">    server</span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#676E95;font-style:italic;">#指定服务端口</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#F07178;">1935</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;"># //RTMP协议使用的默认端口  </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">chunk_size</span><span style="color:#F07178;"> 4000</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;"># //RTMP分块大小</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#676E95;font-style:italic;">#指定 HLS 流应用</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">application</span><span style="color:#F07178;"> hls { </span><span style="color:#676E95;font-style:italic;"># hls为流应用的名称，可以随便填</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">live</span><span style="color:#F07178;"> on</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;"># //打开直播流        </span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">hls</span><span style="color:#F07178;"> on</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">      </span><span style="color:#676E95;font-style:italic;"># //打开 HLS        </span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">hls_path</span><span style="color:#F07178;"> /tmp/hls</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># http 配置模块</span></span>
<span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 通过 include 加载 mime.types 文件，里面的 types {} 模块将文件扩展名映射到响应的 MIME 类型</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">      mime.types</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 定义响应的默认 MIME 类型</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;"> application/octet-stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 启用或者禁用 sendfile()</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;"> on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 65 s 超时</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> keepalive_timeout </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># etag</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> etag </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 过期时间</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> expires </span><span style="color:#A6ACCD;">7d</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 虚拟主机配置模块</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 监听 8080 端口</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">8080</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 监听域名为 localhost</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/hls </span><span style="color:#A6ACCD;">{ </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># Serve HLS fragments </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">types</span><span style="color:#A6ACCD;"> { </span></span>
<span class="line"><span style="color:#A6ACCD;">                application/vnd.apple.mpegurl m3u8</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">                video/mp2t ts</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">            } </span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">/tmp</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">Cache-Control no-cache</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="启动nginx流媒体服务器" tabindex="-1">启动Nginx流媒体服务器 <a class="header-anchor" href="#启动nginx流媒体服务器" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span></span>
<span class="line"></span></code></pre></div><h3 id="检查启动状态" tabindex="-1">检查启动状态 <a class="header-anchor" href="#检查启动状态" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">netstat</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-ntpl</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1935</span></span>
<span class="line"></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632038328747-b4329a5a-c6a1-4da5-a61e-8dd82b31cf4f.png#alt=img" alt=""></p><h1 id="使用obs推流-rtmp流" tabindex="-1">使用OBS推流（RTMP流） <a class="header-anchor" href="#使用obs推流-rtmp流" aria-hidden="true">#</a></h1><hr><h3 id="打开设置" tabindex="-1">打开设置 <a class="header-anchor" href="#打开设置" aria-hidden="true">#</a></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632038456312-215e9818-c21d-4fd8-beda-95dfca08b1e9.png#alt=img" alt=""></p><h3 id="在设置中添加推流地址" tabindex="-1">在设置中添加推流地址 <a class="header-anchor" href="#在设置中添加推流地址" aria-hidden="true">#</a></h3><p>服务：选择自定义</p><p>服务器：rtmp://自己服务器ip:1935/stream</p><p>串流密钥：随便填，相当于房间号</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632038632080-0d25f9ee-3459-472e-90c9-8198b4d4cae5.png#alt=img" alt=""></p><h3 id="添加媒体源" tabindex="-1">添加媒体源 <a class="header-anchor" href="#添加媒体源" aria-hidden="true">#</a></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632038854141-6cc31c43-ad35-4828-954b-153705c0d42f.png#alt=img" alt=""></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632038916295-ec4e8d0b-ac67-4f0f-a179-ff8c77170ffc.png#alt=img" alt=""></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632038967356-3d733ae2-c368-4a05-a76c-0f579eb4bed2.png#alt=img" alt=""></p><h3 id="开始推流" tabindex="-1">开始推流 <a class="header-anchor" href="#开始推流" aria-hidden="true">#</a></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632039072972-efe54a26-a40a-4a23-a36c-2bcfc979bc54.png#alt=img" alt=""></p><h1 id="使用播放器拉流-rtmp流" tabindex="-1">使用播放器拉流（RTMP流） <a class="header-anchor" href="#使用播放器拉流-rtmp流" aria-hidden="true">#</a></h1><hr><p>这里使用potplayer播放器拉流播放视频</p><h3 id="设置拉流地址" tabindex="-1">设置拉流地址 <a class="header-anchor" href="#设置拉流地址" aria-hidden="true">#</a></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632039282727-375c855b-c657-41f1-b21f-04321eed53c6.png#alt=img" alt=""></p><p>拉流地址的格式为：<code>http://localhost:8080/live/$STREAM_NAME.m3u8</code></p><p>所以我们这里的拉流地址为：<code>http://47.xxx.xxx.62:8080/live/alanlee.m3u8</code></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632043364901-8c77ce74-615b-4653-9823-aff41b4bb183.png#alt=img" alt=""></p><p><strong>也可以使用rtmp协议地址播放视频</strong></p><p>拉流地址的格式为：<code>http://localhost:1935/$STREAM_NAME</code></p><p>所以我们这里的拉流地址为：<a href="http://47.xxx.xxx.62:1935/alanlee" target="_blank" rel="noreferrer">http://47.xxx.xxx.62:1935/alanlee</a></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632039373111-76f9abac-0c32-4d49-9f7c-1b05431e58d9.png#alt=img" alt=""></p><h3 id="播放视频" tabindex="-1">播放视频 <a class="header-anchor" href="#播放视频" aria-hidden="true">#</a></h3><p>设置好拉流地址后，过几秒就可以播放视频了。</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632039420085-28bbe864-dbdc-4ea1-a5a6-d2419de5c452.png#alt=img" alt=""></p><p>也可以通过这个网页播放视频</p><p><a href="http://www.ossrs.net/players/srs_player.html" target="_blank" rel="noreferrer">http://www.ossrs.net/players/srs_player.html</a></p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632043753448-2f752c3e-042a-4382-969e-fddee99f76e0.png#alt=img" alt=""></p><p>到这里已经完成搭建直播流媒体服务器的推流拉流过程了。下面是推hls流是可选方案。</p><h1 id="使用obs推流-hls流" tabindex="-1">使用OBS推流（HLS流） <a class="header-anchor" href="#使用obs推流-hls流" aria-hidden="true">#</a></h1><hr><p>以上是使用rtmp推流的，在nginx配置中，我们也配置了hls的推流应用。推流方式与RTMP方式基本一致，只是推流地址有点小变化。</p><h3 id="在设置中添加推流地址-1" tabindex="-1">在设置中添加推流地址 <a class="header-anchor" href="#在设置中添加推流地址-1" aria-hidden="true">#</a></h3><p>服务：选择自定义</p><p>服务器：rtmp://自己服务器ip:1935/hls</p><p>串流密钥：随便填，相当于房间号</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632040033806-232d5dec-cd28-4b3d-85d2-ffc0628ae779.png#alt=img" alt=""></p><p>设置好之后就开始推流</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632039072972-efe54a26-a40a-4a23-a36c-2bcfc979bc54.png#alt=img" alt=""></p><h1 id="使用播放器拉流-hls流" tabindex="-1">使用播放器拉流（HLS流） <a class="header-anchor" href="#使用播放器拉流-hls流" aria-hidden="true">#</a></h1><hr><h3 id="设置拉流地址-1" tabindex="-1">设置拉流地址 <a class="header-anchor" href="#设置拉流地址-1" aria-hidden="true">#</a></h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632040318979-9d4a7c84-c6b7-4dbd-a7d2-1c6f9f5ead7d.png#alt=img" alt=""></p><h3 id="播放视频-1" tabindex="-1">播放视频 <a class="header-anchor" href="#播放视频-1" aria-hidden="true">#</a></h3><p>设置好拉流地址后，过几秒就可以播放视频了。</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/743297/1632039420085-28bbe864-dbdc-4ea1-a5a6-d2419de5c452.png#alt=img" alt=""></p>`,70),o=[e];function t(c,r,i,y,d,h){return n(),a("div",null,o)}const A=s(p,[["render",t]]);export{C as __pageData,A as default};
