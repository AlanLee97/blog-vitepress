import{_ as s,o as a,c as n,b as e}from"./app.d2d47940.js";const A=JSON.parse('{"title":"SSM - 02 - 获取bean的方式","description":"","frontmatter":{},"headers":[{"level":3,"title":"1. 通过id获取bean","slug":"_1-通过id获取bean","link":"#_1-通过id获取bean","children":[]},{"level":3,"title":"2. 通过类型获取bean","slug":"_2-通过类型获取bean","link":"#_2-通过类型获取bean","children":[]}],"relativePath":"knowledges/tech/java/framework/SSM-02-获取bean的方式.md","lastUpdated":1678618356000}'),l={name:"knowledges/tech/java/framework/SSM-02-获取bean的方式.md"},o=e(`<h1 id="ssm-02-获取bean的方式" tabindex="-1">SSM - 02 - 获取bean的方式 <a class="header-anchor" href="#ssm-02-获取bean的方式" aria-hidden="true">#</a></h1><h3 id="_1-通过id获取bean" tabindex="-1">1. 通过id获取bean <a class="header-anchor" href="#_1-通过id获取bean" aria-hidden="true">#</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//通过id获取bean</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testIoC1</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> applicationContext</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBean</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">person</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-通过类型获取bean" tabindex="-1">2. 通过类型获取bean <a class="header-anchor" href="#_2-通过类型获取bean" aria-hidden="true">#</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//通过类型获取bean</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testIoC2</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Person</span><span style="color:#A6ACCD;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> applicationContext</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBean</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    person</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">say</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>通过类型获取bean，在xml文件中<strong>只能配置一个该类型的bean</strong>，否则会报错</p></blockquote><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">No</span><span style="color:#A6ACCD;"> qualifying bean of type </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">top.alanlee.study.spring.ioc.bean.Person</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> available</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> expected single matching bean but found </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">person1</span></span>
<span class="line"></span></code></pre></div>`,7),p=[o];function t(c,r,i,y,D,F){return a(),n("div",null,p)}const d=s(l,[["render",t]]);export{A as __pageData,d as default};
